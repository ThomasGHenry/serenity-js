{
  "type": "File",
  "start": 0,
  "end": 1191,
  "loc": {
    "start": {
      "line": 1,
      "column": 0,
      "index": 0
    },
    "end": {
      "line": 38,
      "column": 0,
      "index": 1191
    }
  },
  "errors": [],
  "program": {
    "type": "Program",
    "start": 0,
    "end": 1191,
    "loc": {
      "start": {
        "line": 1,
        "column": 0,
        "index": 0
      },
      "end": {
        "line": 38,
        "column": 0,
        "index": 1191
      }
    },
    "sourceType": "module",
    "interpreter": null,
    "body": [
      {
        "type": "ImportDeclaration",
        "start": 0,
        "end": 46,
        "loc": {
          "start": {
            "line": 1,
            "column": 0,
            "index": 0
          },
          "end": {
            "line": 1,
            "column": 46,
            "index": 46
          }
        },
        "importKind": "value",
        "specifiers": [
          {
            "type": "ImportSpecifier",
            "start": 9,
            "end": 21,
            "loc": {
              "start": {
                "line": 1,
                "column": 9,
                "index": 9
              },
              "end": {
                "line": 1,
                "column": 21,
                "index": 21
              }
            },
            "imported": {
              "type": "Identifier",
              "start": 9,
              "end": 21,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 9,
                  "index": 9
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "index": 21
                },
                "identifierName": "RuntimeError"
              },
              "name": "RuntimeError"
            },
            "importKind": "value",
            "local": {
              "type": "Identifier",
              "start": 9,
              "end": 21,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 9,
                  "index": 9
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "index": 21
                },
                "identifierName": "RuntimeError"
              },
              "name": "RuntimeError"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 29,
          "end": 45,
          "loc": {
            "start": {
              "line": 1,
              "column": 29,
              "index": 29
            },
            "end": {
              "line": 1,
              "column": 45,
              "index": 45
            }
          },
          "extra": {
            "rawValue": "./RuntimeError",
            "raw": "'./RuntimeError'"
          },
          "value": "./RuntimeError"
        },
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc \n *  \n * @lineNumber \n * 21 \n ",
            "start": 47,
            "end": 92,
            "loc": {
              "start": {
                "line": 2,
                "column": 0,
                "index": 47
              },
              "end": {
                "line": 7,
                "column": 3,
                "index": 92
              }
            }
          },
          {
            "type": "CommentBlock",
            "value": "*\n * @desc\n *  Thrown to indicate that the test can't be performed due to an issue with a downstream dependency.\n *  For example, it makes no sense to run a full-stack integration test if we already know that\n *  the database server is down.\n *\n * @example <caption>Throwing a TestCompromisedError from a custom Interaction</caption>\n *  import { Interaction } from '@serenity-js/core';\n *\n *  const SetUpTestDatabase = () =>\n *      Interaction.where(`#actor sets up a test database`, actor => {\n *          return SomeCustomDatabaseSpecificAbility.as(actor).setUpTestDatabase().catch(error => {\n *              throw new TestCompromisedError('Could not set up the test database', error);\n *          });\n *      });\n *\n * @extends {RuntimeError}\n ",
            "start": 95,
            "end": 848,
            "loc": {
              "start": {
                "line": 10,
                "column": 0,
                "index": 95
              },
              "end": {
                "line": 27,
                "column": 3,
                "index": 848
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 849,
        "end": 1190,
        "loc": {
          "start": {
            "line": 28,
            "column": 0,
            "index": 849
          },
          "end": {
            "line": 37,
            "column": 1,
            "index": 1190
          }
        },
        "exportKind": "value",
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "ClassDeclaration",
          "start": 856,
          "end": 1190,
          "loc": {
            "start": {
              "line": 28,
              "column": 7,
              "index": 856
            },
            "end": {
              "line": 37,
              "column": 1,
              "index": 1190
            }
          },
          "id": {
            "type": "Identifier",
            "start": 862,
            "end": 882,
            "loc": {
              "start": {
                "line": 28,
                "column": 13,
                "index": 862
              },
              "end": {
                "line": 28,
                "column": 33,
                "index": 882
              },
              "identifierName": "TestCompromisedError"
            },
            "name": "TestCompromisedError"
          },
          "superClass": {
            "type": "Identifier",
            "start": 891,
            "end": 903,
            "loc": {
              "start": {
                "line": 28,
                "column": 42,
                "index": 891
              },
              "end": {
                "line": 28,
                "column": 54,
                "index": 903
              },
              "identifierName": "RuntimeError"
            },
            "name": "RuntimeError"
          },
          "body": {
            "type": "ClassBody",
            "start": 904,
            "end": 1190,
            "loc": {
              "start": {
                "line": 28,
                "column": 55,
                "index": 904
              },
              "end": {
                "line": 37,
                "column": 1,
                "index": 1190
              }
            },
            "body": [
              {
                "type": "ClassMethod",
                "start": 1084,
                "end": 1188,
                "loc": {
                  "start": {
                    "line": 34,
                    "column": 4,
                    "index": 1084
                  },
                  "end": {
                    "line": 36,
                    "column": 5,
                    "index": 1188
                  }
                },
                "static": false,
                "key": {
                  "type": "Identifier",
                  "start": 1084,
                  "end": 1095,
                  "loc": {
                    "start": {
                      "line": 34,
                      "column": 4,
                      "index": 1084
                    },
                    "end": {
                      "line": 34,
                      "column": 15,
                      "index": 1095
                    },
                    "identifierName": "constructor"
                  },
                  "name": "constructor"
                },
                "computed": false,
                "kind": "constructor",
                "id": null,
                "generator": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "start": 1096,
                    "end": 1111,
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 16,
                        "index": 1096
                      },
                      "end": {
                        "line": 34,
                        "column": 31,
                        "index": 1111
                      },
                      "identifierName": "message"
                    },
                    "name": "message",
                    "typeAnnotation": {
                      "type": "TSTypeAnnotation",
                      "start": 1103,
                      "end": 1111,
                      "loc": {
                        "start": {
                          "line": 34,
                          "column": 23,
                          "index": 1103
                        },
                        "end": {
                          "line": 34,
                          "column": 31,
                          "index": 1111
                        }
                      },
                      "typeAnnotation": {
                        "type": "TSStringKeyword",
                        "start": 1105,
                        "end": 1111,
                        "loc": {
                          "start": {
                            "line": 34,
                            "column": 25,
                            "index": 1105
                          },
                          "end": {
                            "line": 34,
                            "column": 31,
                            "index": 1111
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "Identifier",
                    "start": 1113,
                    "end": 1126,
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 33,
                        "index": 1113
                      },
                      "end": {
                        "line": 34,
                        "column": 46,
                        "index": 1126
                      },
                      "identifierName": "cause"
                    },
                    "name": "cause",
                    "optional": true,
                    "typeAnnotation": {
                      "type": "TSTypeAnnotation",
                      "start": 1119,
                      "end": 1126,
                      "loc": {
                        "start": {
                          "line": 34,
                          "column": 39,
                          "index": 1119
                        },
                        "end": {
                          "line": 34,
                          "column": 46,
                          "index": 1126
                        }
                      },
                      "typeAnnotation": {
                        "type": "TSTypeReference",
                        "start": 1121,
                        "end": 1126,
                        "loc": {
                          "start": {
                            "line": 34,
                            "column": 41,
                            "index": 1121
                          },
                          "end": {
                            "line": 34,
                            "column": 46,
                            "index": 1126
                          }
                        },
                        "typeName": {
                          "type": "Identifier",
                          "start": 1121,
                          "end": 1126,
                          "loc": {
                            "start": {
                              "line": 34,
                              "column": 41,
                              "index": 1121
                            },
                            "end": {
                              "line": 34,
                              "column": 46,
                              "index": 1126
                            },
                            "identifierName": "Error"
                          },
                          "name": "Error"
                        }
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "start": 1128,
                  "end": 1188,
                  "loc": {
                    "start": {
                      "line": 34,
                      "column": 48,
                      "index": 1128
                    },
                    "end": {
                      "line": 36,
                      "column": 5,
                      "index": 1188
                    }
                  },
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "start": 1138,
                      "end": 1182,
                      "loc": {
                        "start": {
                          "line": 35,
                          "column": 8,
                          "index": 1138
                        },
                        "end": {
                          "line": 35,
                          "column": 52,
                          "index": 1182
                        }
                      },
                      "expression": {
                        "type": "CallExpression",
                        "start": 1138,
                        "end": 1181,
                        "loc": {
                          "start": {
                            "line": 35,
                            "column": 8,
                            "index": 1138
                          },
                          "end": {
                            "line": 35,
                            "column": 51,
                            "index": 1181
                          }
                        },
                        "callee": {
                          "type": "Super",
                          "start": 1138,
                          "end": 1143,
                          "loc": {
                            "start": {
                              "line": 35,
                              "column": 8,
                              "index": 1138
                            },
                            "end": {
                              "line": 35,
                              "column": 13,
                              "index": 1143
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "start": 1144,
                            "end": 1164,
                            "loc": {
                              "start": {
                                "line": 35,
                                "column": 14,
                                "index": 1144
                              },
                              "end": {
                                "line": 35,
                                "column": 34,
                                "index": 1164
                              },
                              "identifierName": "TestCompromisedError"
                            },
                            "name": "TestCompromisedError"
                          },
                          {
                            "type": "Identifier",
                            "start": 1166,
                            "end": 1173,
                            "loc": {
                              "start": {
                                "line": 35,
                                "column": 36,
                                "index": 1166
                              },
                              "end": {
                                "line": 35,
                                "column": 43,
                                "index": 1173
                              },
                              "identifierName": "message"
                            },
                            "name": "message"
                          },
                          {
                            "type": "Identifier",
                            "start": 1175,
                            "end": 1180,
                            "loc": {
                              "start": {
                                "line": 35,
                                "column": 45,
                                "index": 1175
                              },
                              "end": {
                                "line": 35,
                                "column": 50,
                                "index": 1180
                              },
                              "identifierName": "cause"
                            },
                            "name": "cause"
                          }
                        ]
                      }
                    }
                  ],
                  "directives": []
                },
                "leadingComments": [
                  {
                    "type": "CommentBlock",
                    "value": "*\n     * @param {string} message - Human-readable description of the error\n     * @param {Error} [cause] - The root cause of this {@link RuntimeError}, if any\n     ",
                    "start": 911,
                    "end": 1079,
                    "loc": {
                      "start": {
                        "line": 30,
                        "column": 4,
                        "index": 911
                      },
                      "end": {
                        "line": 33,
                        "column": 7,
                        "index": 1079
                      }
                    }
                  }
                ]
              }
            ]
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @desc \n *  \n * @lineNumber \n * 21 \n ",
              "start": 47,
              "end": 92,
              "loc": {
                "start": {
                  "line": 2,
                  "column": 0,
                  "index": 47
                },
                "end": {
                  "line": 7,
                  "column": 3,
                  "index": 92
                }
              }
            },
            {
              "type": "CommentBlock",
              "value": "*\n * @desc\n *  Thrown to indicate that the test can't be performed due to an issue with a downstream dependency.\n *  For example, it makes no sense to run a full-stack integration test if we already know that\n *  the database server is down.\n *\n * @example <caption>Throwing a TestCompromisedError from a custom Interaction</caption>\n *  import { Interaction } from '@serenity-js/core';\n *\n *  const SetUpTestDatabase = () =>\n *      Interaction.where(`#actor sets up a test database`, actor => {\n *          return SomeCustomDatabaseSpecificAbility.as(actor).setUpTestDatabase().catch(error => {\n *              throw new TestCompromisedError('Could not set up the test database', error);\n *          });\n *      });\n *\n * @extends {RuntimeError}\n ",
              "start": 95,
              "end": 848,
              "loc": {
                "start": {
                  "line": 10,
                  "column": 0,
                  "index": 95
                },
                "end": {
                  "line": 27,
                  "column": 3,
                  "index": 848
                }
              }
            }
          ],
          "trailingComments": []
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc \n *  \n * @lineNumber \n * 21 \n ",
            "start": 47,
            "end": 92,
            "loc": {
              "start": {
                "line": 2,
                "column": 0,
                "index": 47
              },
              "end": {
                "line": 7,
                "column": 3,
                "index": 92
              }
            }
          },
          {
            "type": "CommentBlock",
            "value": "*\n * @desc\n *  Thrown to indicate that the test can't be performed due to an issue with a downstream dependency.\n *  For example, it makes no sense to run a full-stack integration test if we already know that\n *  the database server is down.\n *\n * @example <caption>Throwing a TestCompromisedError from a custom Interaction</caption>\n *  import { Interaction } from '@serenity-js/core';\n *\n *  const SetUpTestDatabase = () =>\n *      Interaction.where(`#actor sets up a test database`, actor => {\n *          return SomeCustomDatabaseSpecificAbility.as(actor).setUpTestDatabase().catch(error => {\n *              throw new TestCompromisedError('Could not set up the test database', error);\n *          });\n *      });\n *\n * @extends {RuntimeError}\n ",
            "start": 95,
            "end": 848,
            "loc": {
              "start": {
                "line": 10,
                "column": 0,
                "index": 95
              },
              "end": {
                "line": 27,
                "column": 3,
                "index": 848
              }
            }
          }
        ]
      }
    ],
    "directives": []
  },
  "comments": [
    {
      "type": "CommentBlock",
      "value": "*\n * @desc \n *  \n * @lineNumber \n * 21 \n ",
      "start": 47,
      "end": 92,
      "loc": {
        "start": {
          "line": 2,
          "column": 0,
          "index": 47
        },
        "end": {
          "line": 7,
          "column": 3,
          "index": 92
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc\n *  Thrown to indicate that the test can't be performed due to an issue with a downstream dependency.\n *  For example, it makes no sense to run a full-stack integration test if we already know that\n *  the database server is down.\n *\n * @example <caption>Throwing a TestCompromisedError from a custom Interaction</caption>\n *  import { Interaction } from '@serenity-js/core';\n *\n *  const SetUpTestDatabase = () =>\n *      Interaction.where(`#actor sets up a test database`, actor => {\n *          return SomeCustomDatabaseSpecificAbility.as(actor).setUpTestDatabase().catch(error => {\n *              throw new TestCompromisedError('Could not set up the test database', error);\n *          });\n *      });\n *\n * @extends {RuntimeError}\n ",
      "start": 95,
      "end": 848,
      "loc": {
        "start": {
          "line": 10,
          "column": 0,
          "index": 95
        },
        "end": {
          "line": 27,
          "column": 3,
          "index": 848
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n     * @param {string} message - Human-readable description of the error\n     * @param {Error} [cause] - The root cause of this {@link RuntimeError}, if any\n     ",
      "start": 911,
      "end": 1079,
      "loc": {
        "start": {
          "line": 30,
          "column": 4,
          "index": 911
        },
        "end": {
          "line": 33,
          "column": 7,
          "index": 1079
        }
      }
    }
  ]
}