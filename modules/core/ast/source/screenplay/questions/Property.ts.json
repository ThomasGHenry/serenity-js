{
  "type": "File",
  "start": 0,
  "end": 3598,
  "loc": {
    "start": {
      "line": 1,
      "column": 0,
      "index": 0
    },
    "end": {
      "line": 134,
      "column": 0,
      "index": 3598
    }
  },
  "errors": [],
  "program": {
    "type": "Program",
    "start": 0,
    "end": 3598,
    "loc": {
      "start": {
        "line": 1,
        "column": 0,
        "index": 0
      },
      "end": {
        "line": 134,
        "column": 0,
        "index": 3598
      }
    },
    "sourceType": "module",
    "interpreter": null,
    "body": [
      {
        "type": "ImportDeclaration",
        "start": 0,
        "end": 43,
        "loc": {
          "start": {
            "line": 1,
            "column": 0,
            "index": 0
          },
          "end": {
            "line": 1,
            "column": 43,
            "index": 43
          }
        },
        "importKind": "value",
        "specifiers": [
          {
            "type": "ImportSpecifier",
            "start": 9,
            "end": 19,
            "loc": {
              "start": {
                "line": 1,
                "column": 9,
                "index": 9
              },
              "end": {
                "line": 1,
                "column": 19,
                "index": 19
              }
            },
            "imported": {
              "type": "Identifier",
              "start": 9,
              "end": 19,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 9,
                  "index": 9
                },
                "end": {
                  "line": 1,
                  "column": 19,
                  "index": 19
                },
                "identifierName": "Answerable"
              },
              "name": "Answerable"
            },
            "importKind": "value",
            "local": {
              "type": "Identifier",
              "start": 9,
              "end": 19,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 9,
                  "index": 9
                },
                "end": {
                  "line": 1,
                  "column": 19,
                  "index": 19
                },
                "identifierName": "Answerable"
              },
              "name": "Answerable"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 27,
          "end": 42,
          "loc": {
            "start": {
              "line": 1,
              "column": 27,
              "index": 27
            },
            "end": {
              "line": 1,
              "column": 42,
              "index": 42
            }
          },
          "extra": {
            "rawValue": "../Answerable",
            "raw": "'../Answerable'"
          },
          "value": "../Answerable"
        }
      },
      {
        "type": "ImportDeclaration",
        "start": 44,
        "end": 175,
        "loc": {
          "start": {
            "line": 2,
            "column": 0,
            "index": 44
          },
          "end": {
            "line": 2,
            "column": 131,
            "index": 175
          }
        },
        "importKind": "value",
        "specifiers": [
          {
            "type": "ImportSpecifier",
            "start": 53,
            "end": 76,
            "loc": {
              "start": {
                "line": 2,
                "column": 9,
                "index": 53
              },
              "end": {
                "line": 2,
                "column": 32,
                "index": 76
              }
            },
            "imported": {
              "type": "Identifier",
              "start": 53,
              "end": 76,
              "loc": {
                "start": {
                  "line": 2,
                  "column": 9,
                  "index": 53
                },
                "end": {
                  "line": 2,
                  "column": 32,
                  "index": 76
                },
                "identifierName": "createMetaQuestionProxy"
              },
              "name": "createMetaQuestionProxy"
            },
            "importKind": "value",
            "local": {
              "type": "Identifier",
              "start": 53,
              "end": 76,
              "loc": {
                "start": {
                  "line": 2,
                  "column": 9,
                  "index": 53
                },
                "end": {
                  "line": 2,
                  "column": 32,
                  "index": 76
                },
                "identifierName": "createMetaQuestionProxy"
              },
              "name": "createMetaQuestionProxy"
            }
          },
          {
            "type": "ImportSpecifier",
            "start": 78,
            "end": 97,
            "loc": {
              "start": {
                "line": 2,
                "column": 34,
                "index": 78
              },
              "end": {
                "line": 2,
                "column": 53,
                "index": 97
              }
            },
            "imported": {
              "type": "Identifier",
              "start": 78,
              "end": 97,
              "loc": {
                "start": {
                  "line": 2,
                  "column": 34,
                  "index": 78
                },
                "end": {
                  "line": 2,
                  "column": 53,
                  "index": 97
                },
                "identifierName": "createQuestionProxy"
              },
              "name": "createQuestionProxy"
            },
            "importKind": "value",
            "local": {
              "type": "Identifier",
              "start": 78,
              "end": 97,
              "loc": {
                "start": {
                  "line": 2,
                  "column": 34,
                  "index": 78
                },
                "end": {
                  "line": 2,
                  "column": 53,
                  "index": 97
                },
                "identifierName": "createQuestionProxy"
              },
              "name": "createQuestionProxy"
            }
          },
          {
            "type": "ImportSpecifier",
            "start": 99,
            "end": 128,
            "loc": {
              "start": {
                "line": 2,
                "column": 55,
                "index": 99
              },
              "end": {
                "line": 2,
                "column": 84,
                "index": 128
              }
            },
            "imported": {
              "type": "Identifier",
              "start": 99,
              "end": 128,
              "loc": {
                "start": {
                  "line": 2,
                  "column": 55,
                  "index": 99
                },
                "end": {
                  "line": 2,
                  "column": 84,
                  "index": 128
                },
                "identifierName": "WithPropertiesAsMetaQuestions"
              },
              "name": "WithPropertiesAsMetaQuestions"
            },
            "importKind": "value",
            "local": {
              "type": "Identifier",
              "start": 99,
              "end": 128,
              "loc": {
                "start": {
                  "line": 2,
                  "column": 55,
                  "index": 99
                },
                "end": {
                  "line": 2,
                  "column": 84,
                  "index": 128
                },
                "identifierName": "WithPropertiesAsMetaQuestions"
              },
              "name": "WithPropertiesAsMetaQuestions"
            }
          },
          {
            "type": "ImportSpecifier",
            "start": 130,
            "end": 155,
            "loc": {
              "start": {
                "line": 2,
                "column": 86,
                "index": 130
              },
              "end": {
                "line": 2,
                "column": 111,
                "index": 155
              }
            },
            "imported": {
              "type": "Identifier",
              "start": 130,
              "end": 155,
              "loc": {
                "start": {
                  "line": 2,
                  "column": 86,
                  "index": 130
                },
                "end": {
                  "line": 2,
                  "column": 111,
                  "index": 155
                },
                "identifierName": "WithPropertiesAsQuestions"
              },
              "name": "WithPropertiesAsQuestions"
            },
            "importKind": "value",
            "local": {
              "type": "Identifier",
              "start": 130,
              "end": 155,
              "loc": {
                "start": {
                  "line": 2,
                  "column": 86,
                  "index": 130
                },
                "end": {
                  "line": 2,
                  "column": 111,
                  "index": 155
                },
                "identifierName": "WithPropertiesAsQuestions"
              },
              "name": "WithPropertiesAsQuestions"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 163,
          "end": 174,
          "loc": {
            "start": {
              "line": 2,
              "column": 119,
              "index": 163
            },
            "end": {
              "line": 2,
              "column": 130,
              "index": 174
            }
          },
          "extra": {
            "rawValue": "./proxies",
            "raw": "'./proxies'"
          },
          "value": "./proxies"
        },
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc \n *  \n * @lineNumber \n * 49 \n ",
            "start": 176,
            "end": 221,
            "loc": {
              "start": {
                "line": 3,
                "column": 0,
                "index": 176
              },
              "end": {
                "line": 8,
                "column": 3,
                "index": 221
              }
            }
          },
          {
            "type": "CommentBlock",
            "value": "*\n * @desc\n *  Enables easy access to properties of the value of a given {@link Answerable}.\n *\n * @example <caption>Example API response</caption>\n *  interface EnvironmentDetails {\n *      name: string;\n *      url:  string;\n *  }\n *\n *  interface EnvironmentsResponse {\n *      environments: EnvironmentDetails[];\n *  }\n *\n *  const response: EnvironmentsResponse = {\n *     \"environments\": [\n *         {\n *             \"name\": \"dev\",\n *             \"url\":  \"https://dev.example.com\"\n *         },\n *         {\n *             \"name\": \"sit\",\n *             \"url\":  \"https://sit.example.com\"\n *         }\n *     ]\n *  }\n *\n * @example <caption>Combining Property.of and Property.at</caption>\n *  import { actorCalled, List, Property } from '@serenity-js/core';\n *  import { Ensure, equals } from '@serenity-js/assertions';\n *\n *  actorCalled('Lisa').attemptsTo(\n *      Ensure.that(\n *          Property.of(\n *              List.of(response.environments)\n *                  .where(Property.at<EnvironmentDetails>().name, equals('dev'))\n *                  .first(),\n *          ).url,\n *          equals('https://dev.example.com')\n *      )\n *  )\n *\n * @see {@link Question}\n * @see {@link List}\n ",
            "start": 224,
            "end": 1428,
            "loc": {
              "start": {
                "line": 11,
                "column": 0,
                "index": 224
              },
              "end": {
                "line": 55,
                "column": 3,
                "index": 1428
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 1429,
        "end": 3597,
        "loc": {
          "start": {
            "line": 56,
            "column": 0,
            "index": 1429
          },
          "end": {
            "line": 133,
            "column": 1,
            "index": 3597
          }
        },
        "exportKind": "value",
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "ClassDeclaration",
          "start": 1436,
          "end": 3597,
          "loc": {
            "start": {
              "line": 56,
              "column": 7,
              "index": 1436
            },
            "end": {
              "line": 133,
              "column": 1,
              "index": 3597
            }
          },
          "id": {
            "type": "Identifier",
            "start": 1442,
            "end": 1450,
            "loc": {
              "start": {
                "line": 56,
                "column": 13,
                "index": 1442
              },
              "end": {
                "line": 56,
                "column": 21,
                "index": 1450
              },
              "identifierName": "Property"
            },
            "name": "Property"
          },
          "superClass": null,
          "body": {
            "type": "ClassBody",
            "start": 1451,
            "end": 3597,
            "loc": {
              "start": {
                "line": 56,
                "column": 22,
                "index": 1451
              },
              "end": {
                "line": 133,
                "column": 1,
                "index": 3597
              }
            },
            "body": [
              {
                "type": "ClassMethod",
                "start": 2287,
                "end": 2502,
                "loc": {
                  "start": {
                    "line": 92,
                    "column": 4,
                    "index": 2287
                  },
                  "end": {
                    "line": 94,
                    "column": 5,
                    "index": 2502
                  }
                },
                "static": true,
                "key": {
                  "type": "Identifier",
                  "start": 2294,
                  "end": 2296,
                  "loc": {
                    "start": {
                      "line": 92,
                      "column": 11,
                      "index": 2294
                    },
                    "end": {
                      "line": 92,
                      "column": 13,
                      "index": 2296
                    },
                    "identifierName": "of"
                  },
                  "name": "of"
                },
                "computed": false,
                "kind": "method",
                "typeParameters": {
                  "type": "TSTypeParameterDeclaration",
                  "start": 2296,
                  "end": 2320,
                  "loc": {
                    "start": {
                      "line": 92,
                      "column": 13,
                      "index": 2296
                    },
                    "end": {
                      "line": 92,
                      "column": 37,
                      "index": 2320
                    }
                  },
                  "params": [
                    {
                      "type": "TSTypeParameter",
                      "start": 2297,
                      "end": 2319,
                      "loc": {
                        "start": {
                          "line": 92,
                          "column": 14,
                          "index": 2297
                        },
                        "end": {
                          "line": 92,
                          "column": 36,
                          "index": 2319
                        }
                      },
                      "name": "Subject",
                      "constraint": {
                        "type": "TSObjectKeyword",
                        "start": 2313,
                        "end": 2319,
                        "loc": {
                          "start": {
                            "line": 92,
                            "column": 30,
                            "index": 2313
                          },
                          "end": {
                            "line": 92,
                            "column": 36,
                            "index": 2319
                          }
                        }
                      }
                    }
                  ]
                },
                "id": null,
                "generator": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "start": 2321,
                    "end": 2349,
                    "loc": {
                      "start": {
                        "line": 92,
                        "column": 38,
                        "index": 2321
                      },
                      "end": {
                        "line": 92,
                        "column": 66,
                        "index": 2349
                      },
                      "identifierName": "subject"
                    },
                    "name": "subject",
                    "typeAnnotation": {
                      "type": "TSTypeAnnotation",
                      "start": 2328,
                      "end": 2349,
                      "loc": {
                        "start": {
                          "line": 92,
                          "column": 45,
                          "index": 2328
                        },
                        "end": {
                          "line": 92,
                          "column": 66,
                          "index": 2349
                        }
                      },
                      "typeAnnotation": {
                        "type": "TSTypeReference",
                        "start": 2330,
                        "end": 2349,
                        "loc": {
                          "start": {
                            "line": 92,
                            "column": 47,
                            "index": 2330
                          },
                          "end": {
                            "line": 92,
                            "column": 66,
                            "index": 2349
                          }
                        },
                        "typeName": {
                          "type": "Identifier",
                          "start": 2330,
                          "end": 2340,
                          "loc": {
                            "start": {
                              "line": 92,
                              "column": 47,
                              "index": 2330
                            },
                            "end": {
                              "line": 92,
                              "column": 57,
                              "index": 2340
                            },
                            "identifierName": "Answerable"
                          },
                          "name": "Answerable"
                        },
                        "typeParameters": {
                          "type": "TSTypeParameterInstantiation",
                          "start": 2340,
                          "end": 2349,
                          "loc": {
                            "start": {
                              "line": 92,
                              "column": 57,
                              "index": 2340
                            },
                            "end": {
                              "line": 92,
                              "column": 66,
                              "index": 2349
                            }
                          },
                          "params": [
                            {
                              "type": "TSTypeReference",
                              "start": 2341,
                              "end": 2348,
                              "loc": {
                                "start": {
                                  "line": 92,
                                  "column": 58,
                                  "index": 2341
                                },
                                "end": {
                                  "line": 92,
                                  "column": 65,
                                  "index": 2348
                                }
                              },
                              "typeName": {
                                "type": "Identifier",
                                "start": 2341,
                                "end": 2348,
                                "loc": {
                                  "start": {
                                    "line": 92,
                                    "column": 58,
                                    "index": 2341
                                  },
                                  "end": {
                                    "line": 92,
                                    "column": 65,
                                    "index": 2348
                                  },
                                  "identifierName": "Subject"
                                },
                                "name": "Subject"
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                ],
                "returnType": {
                  "type": "TSTypeAnnotation",
                  "start": 2350,
                  "end": 2386,
                  "loc": {
                    "start": {
                      "line": 92,
                      "column": 67,
                      "index": 2350
                    },
                    "end": {
                      "line": 92,
                      "column": 103,
                      "index": 2386
                    }
                  },
                  "typeAnnotation": {
                    "type": "TSTypeReference",
                    "start": 2352,
                    "end": 2386,
                    "loc": {
                      "start": {
                        "line": 92,
                        "column": 69,
                        "index": 2352
                      },
                      "end": {
                        "line": 92,
                        "column": 103,
                        "index": 2386
                      }
                    },
                    "typeName": {
                      "type": "Identifier",
                      "start": 2352,
                      "end": 2377,
                      "loc": {
                        "start": {
                          "line": 92,
                          "column": 69,
                          "index": 2352
                        },
                        "end": {
                          "line": 92,
                          "column": 94,
                          "index": 2377
                        },
                        "identifierName": "WithPropertiesAsQuestions"
                      },
                      "name": "WithPropertiesAsQuestions"
                    },
                    "typeParameters": {
                      "type": "TSTypeParameterInstantiation",
                      "start": 2377,
                      "end": 2386,
                      "loc": {
                        "start": {
                          "line": 92,
                          "column": 94,
                          "index": 2377
                        },
                        "end": {
                          "line": 92,
                          "column": 103,
                          "index": 2386
                        }
                      },
                      "params": [
                        {
                          "type": "TSTypeReference",
                          "start": 2378,
                          "end": 2385,
                          "loc": {
                            "start": {
                              "line": 92,
                              "column": 95,
                              "index": 2378
                            },
                            "end": {
                              "line": 92,
                              "column": 102,
                              "index": 2385
                            }
                          },
                          "typeName": {
                            "type": "Identifier",
                            "start": 2378,
                            "end": 2385,
                            "loc": {
                              "start": {
                                "line": 92,
                                "column": 95,
                                "index": 2378
                              },
                              "end": {
                                "line": 92,
                                "column": 102,
                                "index": 2385
                              },
                              "identifierName": "Subject"
                            },
                            "name": "Subject"
                          }
                        }
                      ]
                    }
                  }
                },
                "body": {
                  "type": "BlockStatement",
                  "start": 2387,
                  "end": 2502,
                  "loc": {
                    "start": {
                      "line": 92,
                      "column": 104,
                      "index": 2387
                    },
                    "end": {
                      "line": 94,
                      "column": 5,
                      "index": 2502
                    }
                  },
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "start": 2451,
                      "end": 2496,
                      "loc": {
                        "start": {
                          "line": 93,
                          "column": 8,
                          "index": 2451
                        },
                        "end": {
                          "line": 93,
                          "column": 53,
                          "index": 2496
                        }
                      },
                      "argument": {
                        "type": "CallExpression",
                        "start": 2458,
                        "end": 2495,
                        "loc": {
                          "start": {
                            "line": 93,
                            "column": 15,
                            "index": 2458
                          },
                          "end": {
                            "line": 93,
                            "column": 52,
                            "index": 2495
                          }
                        },
                        "callee": {
                          "type": "Identifier",
                          "start": 2458,
                          "end": 2477,
                          "loc": {
                            "start": {
                              "line": 93,
                              "column": 15,
                              "index": 2458
                            },
                            "end": {
                              "line": 93,
                              "column": 34,
                              "index": 2477
                            },
                            "identifierName": "createQuestionProxy"
                          },
                          "name": "createQuestionProxy"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "start": 2487,
                            "end": 2494,
                            "loc": {
                              "start": {
                                "line": 93,
                                "column": 44,
                                "index": 2487
                              },
                              "end": {
                                "line": 93,
                                "column": 51,
                                "index": 2494
                              },
                              "identifierName": "subject"
                            },
                            "name": "subject"
                          }
                        ],
                        "typeParameters": {
                          "type": "TSTypeParameterInstantiation",
                          "start": 2477,
                          "end": 2486,
                          "loc": {
                            "start": {
                              "line": 93,
                              "column": 34,
                              "index": 2477
                            },
                            "end": {
                              "line": 93,
                              "column": 43,
                              "index": 2486
                            }
                          },
                          "params": [
                            {
                              "type": "TSTypeReference",
                              "start": 2478,
                              "end": 2485,
                              "loc": {
                                "start": {
                                  "line": 93,
                                  "column": 35,
                                  "index": 2478
                                },
                                "end": {
                                  "line": 93,
                                  "column": 42,
                                  "index": 2485
                                }
                              },
                              "typeName": {
                                "type": "Identifier",
                                "start": 2478,
                                "end": 2485,
                                "loc": {
                                  "start": {
                                    "line": 93,
                                    "column": 35,
                                    "index": 2478
                                  },
                                  "end": {
                                    "line": 93,
                                    "column": 42,
                                    "index": 2485
                                  },
                                  "identifierName": "Subject"
                                },
                                "name": "Subject"
                              }
                            }
                          ]
                        }
                      },
                      "leadingComments": [
                        {
                          "type": "CommentLine",
                          "value": " eslint-disable-line @typescript-eslint/ban-types",
                          "start": 2391,
                          "end": 2442,
                          "loc": {
                            "start": {
                              "line": 92,
                              "column": 108,
                              "index": 2391
                            },
                            "end": {
                              "line": 92,
                              "column": 159,
                              "index": 2442
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "directives": []
                },
                "trailingComments": [
                  {
                    "type": "CommentBlock",
                    "value": "*\n * @desc \n *  \n * @lineNumber \n * 95 \n * @return \n * {WithPropertiesAsMetaQuestions} \n * @static \n * \\TRUE \n * @public \n * \\TRUE \n ",
                    "start": 2503,
                    "end": 2640,
                    "loc": {
                      "start": {
                        "line": 95,
                        "column": 0,
                        "index": 2503
                      },
                      "end": {
                        "line": 106,
                        "column": 3,
                        "index": 2640
                      }
                    }
                  },
                  {
                    "type": "CommentBlock",
                    "value": "*\n     * @desc\n     *  Generates a {@link Proxy} around a given {@link Answerable} `subject`\n     *  to turn any of its properties into {@link MetaQuestion}s\n     *  to be used when filtering a {@link List},\n     *\n     * @example <caption>Reading a property</caption>\n     *  import { actorCalled, Property } from '@serenity-js/core';\n     *  import { Ensure, equals } from '@serenity-js/assertions';\n     *\n     *  actorCalled('Lisa').attemptsTo(\n     *      Ensure.that(\n     *          List.of(response.environments)\n     *              .where(Property.at<EnvironmentDetails>().name, equals('dev'))\n     *              .first(),\n     *          equals(response.environments[0])\n     *      )\n     *  )\n     *\n     * @returns {Proxy<Subject>}\n     ",
                    "start": 2647,
                    "end": 3402,
                    "loc": {
                      "start": {
                        "line": 109,
                        "column": 4,
                        "index": 2647
                      },
                      "end": {
                        "line": 129,
                        "column": 7,
                        "index": 3402
                      }
                    }
                  }
                ],
                "leadingComments": [
                  {
                    "type": "CommentBlock",
                    "value": "*\n * @desc \n *  \n * @lineNumber \n * 70 \n * @param \n * {Answerable} subject \n * @return \n * {WithPropertiesAsQuestions} \n * @static \n * \\TRUE \n * @public \n * \\TRUE \n ",
                    "start": 1453,
                    "end": 1622,
                    "loc": {
                      "start": {
                        "line": 57,
                        "column": 0,
                        "index": 1453
                      },
                      "end": {
                        "line": 70,
                        "column": 3,
                        "index": 1622
                      }
                    }
                  },
                  {
                    "type": "CommentBlock",
                    "value": "*\n     * @desc\n     *  Generates a {@link Proxy} around a given {@link Answerable} `subject`\n     *  to turn the properties of the value it will resolve to into {@link Question}s.\n     *\n     * @example <caption>Reading a property</caption>\n     *  import { actorCalled, Property } from '@serenity-js/core';\n     *  import { Ensure, equals } from '@serenity-js/assertions';\n     *\n     *  actorCalled('Lisa').attemptsTo(\n     *      Ensure.that(\n     *          Property.of(response).environments[0].name,\n     *          equals('dev')\n     *      )\n     *  )\n     *\n     * @param {Answerable<Subject>} subject\n     * @returns {Proxy<Subject>}\n     ",
                    "start": 1629,
                    "end": 2282,
                    "loc": {
                      "start": {
                        "line": 73,
                        "column": 4,
                        "index": 1629
                      },
                      "end": {
                        "line": 91,
                        "column": 7,
                        "index": 2282
                      }
                    }
                  }
                ]
              },
              {
                "type": "ClassMethod",
                "start": 3407,
                "end": 3595,
                "loc": {
                  "start": {
                    "line": 130,
                    "column": 4,
                    "index": 3407
                  },
                  "end": {
                    "line": 132,
                    "column": 5,
                    "index": 3595
                  }
                },
                "static": true,
                "key": {
                  "type": "Identifier",
                  "start": 3414,
                  "end": 3416,
                  "loc": {
                    "start": {
                      "line": 130,
                      "column": 11,
                      "index": 3414
                    },
                    "end": {
                      "line": 130,
                      "column": 13,
                      "index": 3416
                    },
                    "identifierName": "at"
                  },
                  "name": "at"
                },
                "computed": false,
                "kind": "method",
                "typeParameters": {
                  "type": "TSTypeParameterDeclaration",
                  "start": 3416,
                  "end": 3440,
                  "loc": {
                    "start": {
                      "line": 130,
                      "column": 13,
                      "index": 3416
                    },
                    "end": {
                      "line": 130,
                      "column": 37,
                      "index": 3440
                    }
                  },
                  "params": [
                    {
                      "type": "TSTypeParameter",
                      "start": 3417,
                      "end": 3439,
                      "loc": {
                        "start": {
                          "line": 130,
                          "column": 14,
                          "index": 3417
                        },
                        "end": {
                          "line": 130,
                          "column": 36,
                          "index": 3439
                        }
                      },
                      "name": "Subject",
                      "constraint": {
                        "type": "TSObjectKeyword",
                        "start": 3433,
                        "end": 3439,
                        "loc": {
                          "start": {
                            "line": 130,
                            "column": 30,
                            "index": 3433
                          },
                          "end": {
                            "line": 130,
                            "column": 36,
                            "index": 3439
                          }
                        }
                      }
                    }
                  ]
                },
                "id": null,
                "generator": false,
                "async": false,
                "params": [],
                "returnType": {
                  "type": "TSTypeAnnotation",
                  "start": 3442,
                  "end": 3482,
                  "loc": {
                    "start": {
                      "line": 130,
                      "column": 39,
                      "index": 3442
                    },
                    "end": {
                      "line": 130,
                      "column": 79,
                      "index": 3482
                    }
                  },
                  "typeAnnotation": {
                    "type": "TSTypeReference",
                    "start": 3444,
                    "end": 3482,
                    "loc": {
                      "start": {
                        "line": 130,
                        "column": 41,
                        "index": 3444
                      },
                      "end": {
                        "line": 130,
                        "column": 79,
                        "index": 3482
                      }
                    },
                    "typeName": {
                      "type": "Identifier",
                      "start": 3444,
                      "end": 3473,
                      "loc": {
                        "start": {
                          "line": 130,
                          "column": 41,
                          "index": 3444
                        },
                        "end": {
                          "line": 130,
                          "column": 70,
                          "index": 3473
                        },
                        "identifierName": "WithPropertiesAsMetaQuestions"
                      },
                      "name": "WithPropertiesAsMetaQuestions"
                    },
                    "typeParameters": {
                      "type": "TSTypeParameterInstantiation",
                      "start": 3473,
                      "end": 3482,
                      "loc": {
                        "start": {
                          "line": 130,
                          "column": 70,
                          "index": 3473
                        },
                        "end": {
                          "line": 130,
                          "column": 79,
                          "index": 3482
                        }
                      },
                      "params": [
                        {
                          "type": "TSTypeReference",
                          "start": 3474,
                          "end": 3481,
                          "loc": {
                            "start": {
                              "line": 130,
                              "column": 71,
                              "index": 3474
                            },
                            "end": {
                              "line": 130,
                              "column": 78,
                              "index": 3481
                            }
                          },
                          "typeName": {
                            "type": "Identifier",
                            "start": 3474,
                            "end": 3481,
                            "loc": {
                              "start": {
                                "line": 130,
                                "column": 71,
                                "index": 3474
                              },
                              "end": {
                                "line": 130,
                                "column": 78,
                                "index": 3481
                              },
                              "identifierName": "Subject"
                            },
                            "name": "Subject"
                          }
                        }
                      ]
                    }
                  }
                },
                "body": {
                  "type": "BlockStatement",
                  "start": 3483,
                  "end": 3595,
                  "loc": {
                    "start": {
                      "line": 130,
                      "column": 80,
                      "index": 3483
                    },
                    "end": {
                      "line": 132,
                      "column": 5,
                      "index": 3595
                    }
                  },
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "start": 3547,
                      "end": 3589,
                      "loc": {
                        "start": {
                          "line": 131,
                          "column": 8,
                          "index": 3547
                        },
                        "end": {
                          "line": 131,
                          "column": 50,
                          "index": 3589
                        }
                      },
                      "argument": {
                        "type": "CallExpression",
                        "start": 3554,
                        "end": 3588,
                        "loc": {
                          "start": {
                            "line": 131,
                            "column": 15,
                            "index": 3554
                          },
                          "end": {
                            "line": 131,
                            "column": 49,
                            "index": 3588
                          }
                        },
                        "callee": {
                          "type": "Identifier",
                          "start": 3554,
                          "end": 3577,
                          "loc": {
                            "start": {
                              "line": 131,
                              "column": 15,
                              "index": 3554
                            },
                            "end": {
                              "line": 131,
                              "column": 38,
                              "index": 3577
                            },
                            "identifierName": "createMetaQuestionProxy"
                          },
                          "name": "createMetaQuestionProxy"
                        },
                        "arguments": [],
                        "typeParameters": {
                          "type": "TSTypeParameterInstantiation",
                          "start": 3577,
                          "end": 3586,
                          "loc": {
                            "start": {
                              "line": 131,
                              "column": 38,
                              "index": 3577
                            },
                            "end": {
                              "line": 131,
                              "column": 47,
                              "index": 3586
                            }
                          },
                          "params": [
                            {
                              "type": "TSTypeReference",
                              "start": 3578,
                              "end": 3585,
                              "loc": {
                                "start": {
                                  "line": 131,
                                  "column": 39,
                                  "index": 3578
                                },
                                "end": {
                                  "line": 131,
                                  "column": 46,
                                  "index": 3585
                                }
                              },
                              "typeName": {
                                "type": "Identifier",
                                "start": 3578,
                                "end": 3585,
                                "loc": {
                                  "start": {
                                    "line": 131,
                                    "column": 39,
                                    "index": 3578
                                  },
                                  "end": {
                                    "line": 131,
                                    "column": 46,
                                    "index": 3585
                                  },
                                  "identifierName": "Subject"
                                },
                                "name": "Subject"
                              }
                            }
                          ]
                        }
                      },
                      "leadingComments": [
                        {
                          "type": "CommentLine",
                          "value": " eslint-disable-line @typescript-eslint/ban-types",
                          "start": 3487,
                          "end": 3538,
                          "loc": {
                            "start": {
                              "line": 130,
                              "column": 84,
                              "index": 3487
                            },
                            "end": {
                              "line": 130,
                              "column": 135,
                              "index": 3538
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "directives": []
                },
                "leadingComments": [
                  {
                    "type": "CommentBlock",
                    "value": "*\n * @desc \n *  \n * @lineNumber \n * 95 \n * @return \n * {WithPropertiesAsMetaQuestions} \n * @static \n * \\TRUE \n * @public \n * \\TRUE \n ",
                    "start": 2503,
                    "end": 2640,
                    "loc": {
                      "start": {
                        "line": 95,
                        "column": 0,
                        "index": 2503
                      },
                      "end": {
                        "line": 106,
                        "column": 3,
                        "index": 2640
                      }
                    }
                  },
                  {
                    "type": "CommentBlock",
                    "value": "*\n     * @desc\n     *  Generates a {@link Proxy} around a given {@link Answerable} `subject`\n     *  to turn any of its properties into {@link MetaQuestion}s\n     *  to be used when filtering a {@link List},\n     *\n     * @example <caption>Reading a property</caption>\n     *  import { actorCalled, Property } from '@serenity-js/core';\n     *  import { Ensure, equals } from '@serenity-js/assertions';\n     *\n     *  actorCalled('Lisa').attemptsTo(\n     *      Ensure.that(\n     *          List.of(response.environments)\n     *              .where(Property.at<EnvironmentDetails>().name, equals('dev'))\n     *              .first(),\n     *          equals(response.environments[0])\n     *      )\n     *  )\n     *\n     * @returns {Proxy<Subject>}\n     ",
                    "start": 2647,
                    "end": 3402,
                    "loc": {
                      "start": {
                        "line": 109,
                        "column": 4,
                        "index": 2647
                      },
                      "end": {
                        "line": 129,
                        "column": 7,
                        "index": 3402
                      }
                    }
                  }
                ]
              }
            ]
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @desc \n *  \n * @lineNumber \n * 49 \n ",
              "start": 176,
              "end": 221,
              "loc": {
                "start": {
                  "line": 3,
                  "column": 0,
                  "index": 176
                },
                "end": {
                  "line": 8,
                  "column": 3,
                  "index": 221
                }
              }
            },
            {
              "type": "CommentBlock",
              "value": "*\n * @desc\n *  Enables easy access to properties of the value of a given {@link Answerable}.\n *\n * @example <caption>Example API response</caption>\n *  interface EnvironmentDetails {\n *      name: string;\n *      url:  string;\n *  }\n *\n *  interface EnvironmentsResponse {\n *      environments: EnvironmentDetails[];\n *  }\n *\n *  const response: EnvironmentsResponse = {\n *     \"environments\": [\n *         {\n *             \"name\": \"dev\",\n *             \"url\":  \"https://dev.example.com\"\n *         },\n *         {\n *             \"name\": \"sit\",\n *             \"url\":  \"https://sit.example.com\"\n *         }\n *     ]\n *  }\n *\n * @example <caption>Combining Property.of and Property.at</caption>\n *  import { actorCalled, List, Property } from '@serenity-js/core';\n *  import { Ensure, equals } from '@serenity-js/assertions';\n *\n *  actorCalled('Lisa').attemptsTo(\n *      Ensure.that(\n *          Property.of(\n *              List.of(response.environments)\n *                  .where(Property.at<EnvironmentDetails>().name, equals('dev'))\n *                  .first(),\n *          ).url,\n *          equals('https://dev.example.com')\n *      )\n *  )\n *\n * @see {@link Question}\n * @see {@link List}\n ",
              "start": 224,
              "end": 1428,
              "loc": {
                "start": {
                  "line": 11,
                  "column": 0,
                  "index": 224
                },
                "end": {
                  "line": 55,
                  "column": 3,
                  "index": 1428
                }
              }
            }
          ],
          "trailingComments": []
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc \n *  \n * @lineNumber \n * 49 \n ",
            "start": 176,
            "end": 221,
            "loc": {
              "start": {
                "line": 3,
                "column": 0,
                "index": 176
              },
              "end": {
                "line": 8,
                "column": 3,
                "index": 221
              }
            }
          },
          {
            "type": "CommentBlock",
            "value": "*\n * @desc\n *  Enables easy access to properties of the value of a given {@link Answerable}.\n *\n * @example <caption>Example API response</caption>\n *  interface EnvironmentDetails {\n *      name: string;\n *      url:  string;\n *  }\n *\n *  interface EnvironmentsResponse {\n *      environments: EnvironmentDetails[];\n *  }\n *\n *  const response: EnvironmentsResponse = {\n *     \"environments\": [\n *         {\n *             \"name\": \"dev\",\n *             \"url\":  \"https://dev.example.com\"\n *         },\n *         {\n *             \"name\": \"sit\",\n *             \"url\":  \"https://sit.example.com\"\n *         }\n *     ]\n *  }\n *\n * @example <caption>Combining Property.of and Property.at</caption>\n *  import { actorCalled, List, Property } from '@serenity-js/core';\n *  import { Ensure, equals } from '@serenity-js/assertions';\n *\n *  actorCalled('Lisa').attemptsTo(\n *      Ensure.that(\n *          Property.of(\n *              List.of(response.environments)\n *                  .where(Property.at<EnvironmentDetails>().name, equals('dev'))\n *                  .first(),\n *          ).url,\n *          equals('https://dev.example.com')\n *      )\n *  )\n *\n * @see {@link Question}\n * @see {@link List}\n ",
            "start": 224,
            "end": 1428,
            "loc": {
              "start": {
                "line": 11,
                "column": 0,
                "index": 224
              },
              "end": {
                "line": 55,
                "column": 3,
                "index": 1428
              }
            }
          }
        ]
      }
    ],
    "directives": []
  },
  "comments": [
    {
      "type": "CommentBlock",
      "value": "*\n * @desc \n *  \n * @lineNumber \n * 49 \n ",
      "start": 176,
      "end": 221,
      "loc": {
        "start": {
          "line": 3,
          "column": 0,
          "index": 176
        },
        "end": {
          "line": 8,
          "column": 3,
          "index": 221
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc\n *  Enables easy access to properties of the value of a given {@link Answerable}.\n *\n * @example <caption>Example API response</caption>\n *  interface EnvironmentDetails {\n *      name: string;\n *      url:  string;\n *  }\n *\n *  interface EnvironmentsResponse {\n *      environments: EnvironmentDetails[];\n *  }\n *\n *  const response: EnvironmentsResponse = {\n *     \"environments\": [\n *         {\n *             \"name\": \"dev\",\n *             \"url\":  \"https://dev.example.com\"\n *         },\n *         {\n *             \"name\": \"sit\",\n *             \"url\":  \"https://sit.example.com\"\n *         }\n *     ]\n *  }\n *\n * @example <caption>Combining Property.of and Property.at</caption>\n *  import { actorCalled, List, Property } from '@serenity-js/core';\n *  import { Ensure, equals } from '@serenity-js/assertions';\n *\n *  actorCalled('Lisa').attemptsTo(\n *      Ensure.that(\n *          Property.of(\n *              List.of(response.environments)\n *                  .where(Property.at<EnvironmentDetails>().name, equals('dev'))\n *                  .first(),\n *          ).url,\n *          equals('https://dev.example.com')\n *      )\n *  )\n *\n * @see {@link Question}\n * @see {@link List}\n ",
      "start": 224,
      "end": 1428,
      "loc": {
        "start": {
          "line": 11,
          "column": 0,
          "index": 224
        },
        "end": {
          "line": 55,
          "column": 3,
          "index": 1428
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc \n *  \n * @lineNumber \n * 70 \n * @param \n * {Answerable} subject \n * @return \n * {WithPropertiesAsQuestions} \n * @static \n * \\TRUE \n * @public \n * \\TRUE \n ",
      "start": 1453,
      "end": 1622,
      "loc": {
        "start": {
          "line": 57,
          "column": 0,
          "index": 1453
        },
        "end": {
          "line": 70,
          "column": 3,
          "index": 1622
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n     * @desc\n     *  Generates a {@link Proxy} around a given {@link Answerable} `subject`\n     *  to turn the properties of the value it will resolve to into {@link Question}s.\n     *\n     * @example <caption>Reading a property</caption>\n     *  import { actorCalled, Property } from '@serenity-js/core';\n     *  import { Ensure, equals } from '@serenity-js/assertions';\n     *\n     *  actorCalled('Lisa').attemptsTo(\n     *      Ensure.that(\n     *          Property.of(response).environments[0].name,\n     *          equals('dev')\n     *      )\n     *  )\n     *\n     * @param {Answerable<Subject>} subject\n     * @returns {Proxy<Subject>}\n     ",
      "start": 1629,
      "end": 2282,
      "loc": {
        "start": {
          "line": 73,
          "column": 4,
          "index": 1629
        },
        "end": {
          "line": 91,
          "column": 7,
          "index": 2282
        }
      }
    },
    {
      "type": "CommentLine",
      "value": " eslint-disable-line @typescript-eslint/ban-types",
      "start": 2391,
      "end": 2442,
      "loc": {
        "start": {
          "line": 92,
          "column": 108,
          "index": 2391
        },
        "end": {
          "line": 92,
          "column": 159,
          "index": 2442
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc \n *  \n * @lineNumber \n * 95 \n * @return \n * {WithPropertiesAsMetaQuestions} \n * @static \n * \\TRUE \n * @public \n * \\TRUE \n ",
      "start": 2503,
      "end": 2640,
      "loc": {
        "start": {
          "line": 95,
          "column": 0,
          "index": 2503
        },
        "end": {
          "line": 106,
          "column": 3,
          "index": 2640
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n     * @desc\n     *  Generates a {@link Proxy} around a given {@link Answerable} `subject`\n     *  to turn any of its properties into {@link MetaQuestion}s\n     *  to be used when filtering a {@link List},\n     *\n     * @example <caption>Reading a property</caption>\n     *  import { actorCalled, Property } from '@serenity-js/core';\n     *  import { Ensure, equals } from '@serenity-js/assertions';\n     *\n     *  actorCalled('Lisa').attemptsTo(\n     *      Ensure.that(\n     *          List.of(response.environments)\n     *              .where(Property.at<EnvironmentDetails>().name, equals('dev'))\n     *              .first(),\n     *          equals(response.environments[0])\n     *      )\n     *  )\n     *\n     * @returns {Proxy<Subject>}\n     ",
      "start": 2647,
      "end": 3402,
      "loc": {
        "start": {
          "line": 109,
          "column": 4,
          "index": 2647
        },
        "end": {
          "line": 129,
          "column": 7,
          "index": 3402
        }
      }
    },
    {
      "type": "CommentLine",
      "value": " eslint-disable-line @typescript-eslint/ban-types",
      "start": 3487,
      "end": 3538,
      "loc": {
        "start": {
          "line": 130,
          "column": 84,
          "index": 3487
        },
        "end": {
          "line": 130,
          "column": 135,
          "index": 3538
        }
      }
    }
  ]
}