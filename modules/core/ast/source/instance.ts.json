{
  "type": "File",
  "start": 0,
  "end": 5207,
  "loc": {
    "start": {
      "line": 1,
      "column": 0,
      "index": 0
    },
    "end": {
      "line": 202,
      "column": 0,
      "index": 5207
    }
  },
  "errors": [],
  "program": {
    "type": "Program",
    "start": 0,
    "end": 5207,
    "loc": {
      "start": {
        "line": 1,
        "column": 0,
        "index": 0
      },
      "end": {
        "line": 202,
        "column": 0,
        "index": 5207
      }
    },
    "sourceType": "module",
    "interpreter": null,
    "body": [
      {
        "type": "ImportDeclaration",
        "start": 0,
        "end": 43,
        "loc": {
          "start": {
            "line": 1,
            "column": 0,
            "index": 0
          },
          "end": {
            "line": 1,
            "column": 43,
            "index": 43
          }
        },
        "importKind": "value",
        "specifiers": [
          {
            "type": "ImportSpecifier",
            "start": 9,
            "end": 14,
            "loc": {
              "start": {
                "line": 1,
                "column": 9,
                "index": 9
              },
              "end": {
                "line": 1,
                "column": 14,
                "index": 14
              }
            },
            "imported": {
              "type": "Identifier",
              "start": 9,
              "end": 14,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 9,
                  "index": 9
                },
                "end": {
                  "line": 1,
                  "column": 14,
                  "index": 14
                },
                "identifierName": "Actor"
              },
              "name": "Actor"
            },
            "importKind": "value",
            "local": {
              "type": "Identifier",
              "start": 9,
              "end": 14,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 9,
                  "index": 9
                },
                "end": {
                  "line": 1,
                  "column": 14,
                  "index": 14
                },
                "identifierName": "Actor"
              },
              "name": "Actor"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 22,
          "end": 42,
          "loc": {
            "start": {
              "line": 1,
              "column": 22,
              "index": 22
            },
            "end": {
              "line": 1,
              "column": 42,
              "index": 42
            }
          },
          "extra": {
            "rawValue": "./screenplay/actor",
            "raw": "'./screenplay/actor'"
          },
          "value": "./screenplay/actor"
        }
      },
      {
        "type": "ImportDeclaration",
        "start": 44,
        "end": 82,
        "loc": {
          "start": {
            "line": 2,
            "column": 0,
            "index": 44
          },
          "end": {
            "line": 2,
            "column": 38,
            "index": 82
          }
        },
        "importKind": "value",
        "specifiers": [
          {
            "type": "ImportSpecifier",
            "start": 53,
            "end": 61,
            "loc": {
              "start": {
                "line": 2,
                "column": 9,
                "index": 53
              },
              "end": {
                "line": 2,
                "column": 17,
                "index": 61
              }
            },
            "imported": {
              "type": "Identifier",
              "start": 53,
              "end": 61,
              "loc": {
                "start": {
                  "line": 2,
                  "column": 9,
                  "index": 53
                },
                "end": {
                  "line": 2,
                  "column": 17,
                  "index": 61
                },
                "identifierName": "Serenity"
              },
              "name": "Serenity"
            },
            "importKind": "value",
            "local": {
              "type": "Identifier",
              "start": 53,
              "end": 61,
              "loc": {
                "start": {
                  "line": 2,
                  "column": 9,
                  "index": 53
                },
                "end": {
                  "line": 2,
                  "column": 17,
                  "index": 61
                },
                "identifierName": "Serenity"
              },
              "name": "Serenity"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 69,
          "end": 81,
          "loc": {
            "start": {
              "line": 2,
              "column": 25,
              "index": 69
            },
            "end": {
              "line": 2,
              "column": 37,
              "index": 81
            }
          },
          "extra": {
            "rawValue": "./Serenity",
            "raw": "'./Serenity'"
          },
          "value": "./Serenity"
        }
      },
      {
        "type": "ImportDeclaration",
        "start": 83,
        "end": 133,
        "loc": {
          "start": {
            "line": 3,
            "column": 0,
            "index": 83
          },
          "end": {
            "line": 3,
            "column": 50,
            "index": 133
          }
        },
        "importKind": "value",
        "specifiers": [
          {
            "type": "ImportSpecifier",
            "start": 92,
            "end": 106,
            "loc": {
              "start": {
                "line": 3,
                "column": 9,
                "index": 92
              },
              "end": {
                "line": 3,
                "column": 23,
                "index": 106
              }
            },
            "imported": {
              "type": "Identifier",
              "start": 92,
              "end": 106,
              "loc": {
                "start": {
                  "line": 3,
                  "column": 9,
                  "index": 92
                },
                "end": {
                  "line": 3,
                  "column": 23,
                  "index": 106
                },
                "identifierName": "SerenityConfig"
              },
              "name": "SerenityConfig"
            },
            "importKind": "value",
            "local": {
              "type": "Identifier",
              "start": 92,
              "end": 106,
              "loc": {
                "start": {
                  "line": 3,
                  "column": 9,
                  "index": 92
                },
                "end": {
                  "line": 3,
                  "column": 23,
                  "index": 106
                },
                "identifierName": "SerenityConfig"
              },
              "name": "SerenityConfig"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 114,
          "end": 132,
          "loc": {
            "start": {
              "line": 3,
              "column": 31,
              "index": 114
            },
            "end": {
              "line": 3,
              "column": 49,
              "index": 132
            }
          },
          "extra": {
            "rawValue": "./SerenityConfig",
            "raw": "'./SerenityConfig'"
          },
          "value": "./SerenityConfig"
        }
      },
      {
        "type": "ImportDeclaration",
        "start": 134,
        "end": 172,
        "loc": {
          "start": {
            "line": 4,
            "column": 0,
            "index": 134
          },
          "end": {
            "line": 4,
            "column": 38,
            "index": 172
          }
        },
        "importKind": "value",
        "specifiers": [
          {
            "type": "ImportSpecifier",
            "start": 143,
            "end": 147,
            "loc": {
              "start": {
                "line": 4,
                "column": 9,
                "index": 143
              },
              "end": {
                "line": 4,
                "column": 13,
                "index": 147
              }
            },
            "imported": {
              "type": "Identifier",
              "start": 143,
              "end": 147,
              "loc": {
                "start": {
                  "line": 4,
                  "column": 9,
                  "index": 143
                },
                "end": {
                  "line": 4,
                  "column": 13,
                  "index": 147
                },
                "identifierName": "Cast"
              },
              "name": "Cast"
            },
            "importKind": "value",
            "local": {
              "type": "Identifier",
              "start": 143,
              "end": 147,
              "loc": {
                "start": {
                  "line": 4,
                  "column": 9,
                  "index": 143
                },
                "end": {
                  "line": 4,
                  "column": 13,
                  "index": 147
                },
                "identifierName": "Cast"
              },
              "name": "Cast"
            }
          },
          {
            "type": "ImportSpecifier",
            "start": 149,
            "end": 154,
            "loc": {
              "start": {
                "line": 4,
                "column": 15,
                "index": 149
              },
              "end": {
                "line": 4,
                "column": 20,
                "index": 154
              }
            },
            "imported": {
              "type": "Identifier",
              "start": 149,
              "end": 154,
              "loc": {
                "start": {
                  "line": 4,
                  "column": 15,
                  "index": 149
                },
                "end": {
                  "line": 4,
                  "column": 20,
                  "index": 154
                },
                "identifierName": "Clock"
              },
              "name": "Clock"
            },
            "importKind": "value",
            "local": {
              "type": "Identifier",
              "start": 149,
              "end": 154,
              "loc": {
                "start": {
                  "line": 4,
                  "column": 15,
                  "index": 149
                },
                "end": {
                  "line": 4,
                  "column": 20,
                  "index": 154
                },
                "identifierName": "Clock"
              },
              "name": "Clock"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 162,
          "end": 171,
          "loc": {
            "start": {
              "line": 4,
              "column": 28,
              "index": 162
            },
            "end": {
              "line": 4,
              "column": 37,
              "index": 171
            }
          },
          "extra": {
            "rawValue": "./stage",
            "raw": "'./stage'"
          },
          "value": "./stage"
        }
      },
      {
        "type": "VariableDeclaration",
        "start": 174,
        "end": 200,
        "loc": {
          "start": {
            "line": 6,
            "column": 0,
            "index": 174
          },
          "end": {
            "line": 6,
            "column": 26,
            "index": 200
          }
        },
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 180,
            "end": 199,
            "loc": {
              "start": {
                "line": 6,
                "column": 6,
                "index": 180
              },
              "end": {
                "line": 6,
                "column": 25,
                "index": 199
              }
            },
            "id": {
              "type": "Identifier",
              "start": 180,
              "end": 185,
              "loc": {
                "start": {
                  "line": 6,
                  "column": 6,
                  "index": 180
                },
                "end": {
                  "line": 6,
                  "column": 11,
                  "index": 185
                },
                "identifierName": "clock"
              },
              "name": "clock"
            },
            "init": {
              "type": "NewExpression",
              "start": 188,
              "end": 199,
              "loc": {
                "start": {
                  "line": 6,
                  "column": 14,
                  "index": 188
                },
                "end": {
                  "line": 6,
                  "column": 25,
                  "index": 199
                }
              },
              "callee": {
                "type": "Identifier",
                "start": 192,
                "end": 197,
                "loc": {
                  "start": {
                    "line": 6,
                    "column": 18,
                    "index": 192
                  },
                  "end": {
                    "line": 6,
                    "column": 23,
                    "index": 197
                  },
                  "identifierName": "Clock"
                },
                "name": "Clock"
              },
              "arguments": []
            }
          }
        ],
        "kind": "const"
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 202,
        "end": 246,
        "loc": {
          "start": {
            "line": 8,
            "column": 0,
            "index": 202
          },
          "end": {
            "line": 8,
            "column": 44,
            "index": 246
          }
        },
        "exportKind": "value",
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 209,
          "end": 246,
          "loc": {
            "start": {
              "line": 8,
              "column": 7,
              "index": 209
            },
            "end": {
              "line": 8,
              "column": 44,
              "index": 246
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 215,
              "end": 245,
              "loc": {
                "start": {
                  "line": 8,
                  "column": 13,
                  "index": 215
                },
                "end": {
                  "line": 8,
                  "column": 43,
                  "index": 245
                }
              },
              "id": {
                "type": "Identifier",
                "start": 215,
                "end": 223,
                "loc": {
                  "start": {
                    "line": 8,
                    "column": 13,
                    "index": 215
                  },
                  "end": {
                    "line": 8,
                    "column": 21,
                    "index": 223
                  },
                  "identifierName": "serenity"
                },
                "name": "serenity"
              },
              "init": {
                "type": "NewExpression",
                "start": 226,
                "end": 245,
                "loc": {
                  "start": {
                    "line": 8,
                    "column": 24,
                    "index": 226
                  },
                  "end": {
                    "line": 8,
                    "column": 43,
                    "index": 245
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 230,
                  "end": 238,
                  "loc": {
                    "start": {
                      "line": 8,
                      "column": 28,
                      "index": 230
                    },
                    "end": {
                      "line": 8,
                      "column": 36,
                      "index": 238
                    },
                    "identifierName": "Serenity"
                  },
                  "name": "Serenity"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "start": 239,
                    "end": 244,
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 37,
                        "index": 239
                      },
                      "end": {
                        "line": 8,
                        "column": 42,
                        "index": 244
                      },
                      "identifierName": "clock"
                    },
                    "name": "clock"
                  }
                ]
              }
            }
          ],
          "kind": "const",
          "leadingComments": [],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @desc \n *  \n * @lineNumber \n * 24 \n * @param \n * {SerenityConfig} config \n * @return \n * {void} \n ",
              "start": 247,
              "end": 354,
              "loc": {
                "start": {
                  "line": 9,
                  "column": 0,
                  "index": 247
                },
                "end": {
                  "line": 18,
                  "column": 3,
                  "index": 354
                }
              }
            },
            {
              "type": "CommentBlock",
              "value": "*\n * @desc\n *  Configures Serenity/JS. Every call to this function\n *  replaces the previous configuration provided,\n *  so this function should called be exactly once\n *  in your test suite.\n *\n *  This function is an alias for {@link Serenity#configure}.\n *\n * @param {SerenityConfig} config\n * @return {void}\n *\n * @see {@link Serenity#configure}\n ",
              "start": 357,
              "end": 712,
              "loc": {
                "start": {
                  "line": 21,
                  "column": 0,
                  "index": 357
                },
                "end": {
                  "line": 34,
                  "column": 3,
                  "index": 712
                }
              }
            }
          ]
        },
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc \n *  \n * @lineNumber \n * 24 \n * @param \n * {SerenityConfig} config \n * @return \n * {void} \n ",
            "start": 247,
            "end": 354,
            "loc": {
              "start": {
                "line": 9,
                "column": 0,
                "index": 247
              },
              "end": {
                "line": 18,
                "column": 3,
                "index": 354
              }
            }
          },
          {
            "type": "CommentBlock",
            "value": "*\n * @desc\n *  Configures Serenity/JS. Every call to this function\n *  replaces the previous configuration provided,\n *  so this function should called be exactly once\n *  in your test suite.\n *\n *  This function is an alias for {@link Serenity#configure}.\n *\n * @param {SerenityConfig} config\n * @return {void}\n *\n * @see {@link Serenity#configure}\n ",
            "start": 357,
            "end": 712,
            "loc": {
              "start": {
                "line": 21,
                "column": 0,
                "index": 357
              },
              "end": {
                "line": 34,
                "column": 3,
                "index": 712
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 713,
        "end": 804,
        "loc": {
          "start": {
            "line": 35,
            "column": 0,
            "index": 713
          },
          "end": {
            "line": 37,
            "column": 1,
            "index": 804
          }
        },
        "exportKind": "value",
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "FunctionDeclaration",
          "start": 720,
          "end": 804,
          "loc": {
            "start": {
              "line": 35,
              "column": 7,
              "index": 720
            },
            "end": {
              "line": 37,
              "column": 1,
              "index": 804
            }
          },
          "id": {
            "type": "Identifier",
            "start": 729,
            "end": 738,
            "loc": {
              "start": {
                "line": 35,
                "column": 16,
                "index": 729
              },
              "end": {
                "line": 35,
                "column": 25,
                "index": 738
              },
              "identifierName": "configure"
            },
            "name": "configure"
          },
          "generator": false,
          "async": false,
          "params": [
            {
              "type": "Identifier",
              "start": 739,
              "end": 761,
              "loc": {
                "start": {
                  "line": 35,
                  "column": 26,
                  "index": 739
                },
                "end": {
                  "line": 35,
                  "column": 48,
                  "index": 761
                },
                "identifierName": "config"
              },
              "name": "config",
              "typeAnnotation": {
                "type": "TSTypeAnnotation",
                "start": 745,
                "end": 761,
                "loc": {
                  "start": {
                    "line": 35,
                    "column": 32,
                    "index": 745
                  },
                  "end": {
                    "line": 35,
                    "column": 48,
                    "index": 761
                  }
                },
                "typeAnnotation": {
                  "type": "TSTypeReference",
                  "start": 747,
                  "end": 761,
                  "loc": {
                    "start": {
                      "line": 35,
                      "column": 34,
                      "index": 747
                    },
                    "end": {
                      "line": 35,
                      "column": 48,
                      "index": 761
                    }
                  },
                  "typeName": {
                    "type": "Identifier",
                    "start": 747,
                    "end": 761,
                    "loc": {
                      "start": {
                        "line": 35,
                        "column": 34,
                        "index": 747
                      },
                      "end": {
                        "line": 35,
                        "column": 48,
                        "index": 761
                      },
                      "identifierName": "SerenityConfig"
                    },
                    "name": "SerenityConfig"
                  }
                }
              }
            }
          ],
          "returnType": {
            "type": "TSTypeAnnotation",
            "start": 762,
            "end": 768,
            "loc": {
              "start": {
                "line": 35,
                "column": 49,
                "index": 762
              },
              "end": {
                "line": 35,
                "column": 55,
                "index": 768
              }
            },
            "typeAnnotation": {
              "type": "TSVoidKeyword",
              "start": 764,
              "end": 768,
              "loc": {
                "start": {
                  "line": 35,
                  "column": 51,
                  "index": 764
                },
                "end": {
                  "line": 35,
                  "column": 55,
                  "index": 768
                }
              }
            }
          },
          "body": {
            "type": "BlockStatement",
            "start": 769,
            "end": 804,
            "loc": {
              "start": {
                "line": 35,
                "column": 56,
                "index": 769
              },
              "end": {
                "line": 37,
                "column": 1,
                "index": 804
              }
            },
            "body": [
              {
                "type": "ExpressionStatement",
                "start": 775,
                "end": 802,
                "loc": {
                  "start": {
                    "line": 36,
                    "column": 4,
                    "index": 775
                  },
                  "end": {
                    "line": 36,
                    "column": 31,
                    "index": 802
                  }
                },
                "expression": {
                  "type": "CallExpression",
                  "start": 775,
                  "end": 801,
                  "loc": {
                    "start": {
                      "line": 36,
                      "column": 4,
                      "index": 775
                    },
                    "end": {
                      "line": 36,
                      "column": 30,
                      "index": 801
                    }
                  },
                  "callee": {
                    "type": "MemberExpression",
                    "start": 775,
                    "end": 793,
                    "loc": {
                      "start": {
                        "line": 36,
                        "column": 4,
                        "index": 775
                      },
                      "end": {
                        "line": 36,
                        "column": 22,
                        "index": 793
                      }
                    },
                    "object": {
                      "type": "Identifier",
                      "start": 775,
                      "end": 783,
                      "loc": {
                        "start": {
                          "line": 36,
                          "column": 4,
                          "index": 775
                        },
                        "end": {
                          "line": 36,
                          "column": 12,
                          "index": 783
                        },
                        "identifierName": "serenity"
                      },
                      "name": "serenity"
                    },
                    "computed": false,
                    "property": {
                      "type": "Identifier",
                      "start": 784,
                      "end": 793,
                      "loc": {
                        "start": {
                          "line": 36,
                          "column": 13,
                          "index": 784
                        },
                        "end": {
                          "line": 36,
                          "column": 22,
                          "index": 793
                        },
                        "identifierName": "configure"
                      },
                      "name": "configure"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "start": 794,
                      "end": 800,
                      "loc": {
                        "start": {
                          "line": 36,
                          "column": 23,
                          "index": 794
                        },
                        "end": {
                          "line": 36,
                          "column": 29,
                          "index": 800
                        },
                        "identifierName": "config"
                      },
                      "name": "config"
                    }
                  ]
                }
              }
            ],
            "directives": []
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @desc \n *  \n * @lineNumber \n * 24 \n * @param \n * {SerenityConfig} config \n * @return \n * {void} \n ",
              "start": 247,
              "end": 354,
              "loc": {
                "start": {
                  "line": 9,
                  "column": 0,
                  "index": 247
                },
                "end": {
                  "line": 18,
                  "column": 3,
                  "index": 354
                }
              }
            },
            {
              "type": "CommentBlock",
              "value": "*\n * @desc\n *  Configures Serenity/JS. Every call to this function\n *  replaces the previous configuration provided,\n *  so this function should called be exactly once\n *  in your test suite.\n *\n *  This function is an alias for {@link Serenity#configure}.\n *\n * @param {SerenityConfig} config\n * @return {void}\n *\n * @see {@link Serenity#configure}\n ",
              "start": 357,
              "end": 712,
              "loc": {
                "start": {
                  "line": 21,
                  "column": 0,
                  "index": 357
                },
                "end": {
                  "line": 34,
                  "column": 3,
                  "index": 712
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @desc \n *  \n * @lineNumber \n * 81 \n * @param \n * {Cast} actors \n * @return \n * {void} \n ",
              "start": 805,
              "end": 902,
              "loc": {
                "start": {
                  "line": 38,
                  "column": 0,
                  "index": 805
                },
                "end": {
                  "line": 47,
                  "column": 3,
                  "index": 902
                }
              }
            },
            {
              "type": "CommentBlock",
              "value": "*\n * @desc\n *  Re-configures Serenity/JS with a new {@link Cast} of {@link Actor}s\n *  you'd like to use in any subsequent call to {@link actorCalled}.\n *\n *  This function is an alias for {@link Serenity#engage},\n *  which provides an alternative to calling {@link Actor#whoCan}\n *  directly in your tests and is typically invoked in a \"before all\"\n *  or \"before each\" hook of your test runner of choice.\n *\n *  If your implementation of the {@link Cast} interface is stateless,\n *  you can invoke this function once before your entire test suite is executed, see\n *  - [`beforeAll`](https://jasmine.github.io/api/3.6/global.html#beforeAll) in Jasmine,\n *  - [`before`](https://mochajs.org/#hooks) in Mocha,\n *  - [`BeforeAll`](https://github.com/cucumber/cucumber-js/blob/master/docs/support_files/hooks.md#beforeall--afterall) in Cucumber.js\n *\n *  However, if your {@link Cast} holds state that you want reset before each scenario,\n *  it's better to invoke `engage` before each test using:\n *  - [`beforeEach`](https://jasmine.github.io/api/3.6/global.html#beforeEach) in Jasmine\n *  - [`beforeEach`](https://mochajs.org/#hooks) in Mocha,\n *  - [`Before`](https://github.com/cucumber/cucumber-js/blob/master/docs/support_files/hooks.md#hooks) in Cucumber.js\n *\n * @example <caption>Engaging a cast of actors</caption>\n *  import { Actor, Cast } from '@serenity-js/core';\n *\n *  class Actors implements Cast {\n *      prepare(actor: Actor) {\n *          return actor.whoCan(\n *              // ... abilities you'd like the Actor to have\n *          );\n *      }\n *  }\n *\n * engage(new Actors();\n *\n * @example <caption>Usage with Jasmine</caption>\n *  import 'jasmine';\n *\n *  beforeEach(() => engage(new Actors()));\n *\n * @example <caption>Usage with Cucumber</caption>\n *  import { Before } from 'cucumber';\n *\n *  Before(() => engage(new Actors());\n *\n * @param {Cast} actors\n * @returns {void}\n *\n * @see {@link Actor}\n * @see {@link Cast}\n *\n * @see {@link Serenity#engage}\n ",
              "start": 905,
              "end": 2894,
              "loc": {
                "start": {
                  "line": 50,
                  "column": 0,
                  "index": 905
                },
                "end": {
                  "line": 102,
                  "column": 3,
                  "index": 2894
                }
              }
            }
          ]
        },
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc \n *  \n * @lineNumber \n * 81 \n * @param \n * {Cast} actors \n * @return \n * {void} \n ",
            "start": 805,
            "end": 902,
            "loc": {
              "start": {
                "line": 38,
                "column": 0,
                "index": 805
              },
              "end": {
                "line": 47,
                "column": 3,
                "index": 902
              }
            }
          },
          {
            "type": "CommentBlock",
            "value": "*\n * @desc\n *  Re-configures Serenity/JS with a new {@link Cast} of {@link Actor}s\n *  you'd like to use in any subsequent call to {@link actorCalled}.\n *\n *  This function is an alias for {@link Serenity#engage},\n *  which provides an alternative to calling {@link Actor#whoCan}\n *  directly in your tests and is typically invoked in a \"before all\"\n *  or \"before each\" hook of your test runner of choice.\n *\n *  If your implementation of the {@link Cast} interface is stateless,\n *  you can invoke this function once before your entire test suite is executed, see\n *  - [`beforeAll`](https://jasmine.github.io/api/3.6/global.html#beforeAll) in Jasmine,\n *  - [`before`](https://mochajs.org/#hooks) in Mocha,\n *  - [`BeforeAll`](https://github.com/cucumber/cucumber-js/blob/master/docs/support_files/hooks.md#beforeall--afterall) in Cucumber.js\n *\n *  However, if your {@link Cast} holds state that you want reset before each scenario,\n *  it's better to invoke `engage` before each test using:\n *  - [`beforeEach`](https://jasmine.github.io/api/3.6/global.html#beforeEach) in Jasmine\n *  - [`beforeEach`](https://mochajs.org/#hooks) in Mocha,\n *  - [`Before`](https://github.com/cucumber/cucumber-js/blob/master/docs/support_files/hooks.md#hooks) in Cucumber.js\n *\n * @example <caption>Engaging a cast of actors</caption>\n *  import { Actor, Cast } from '@serenity-js/core';\n *\n *  class Actors implements Cast {\n *      prepare(actor: Actor) {\n *          return actor.whoCan(\n *              // ... abilities you'd like the Actor to have\n *          );\n *      }\n *  }\n *\n * engage(new Actors();\n *\n * @example <caption>Usage with Jasmine</caption>\n *  import 'jasmine';\n *\n *  beforeEach(() => engage(new Actors()));\n *\n * @example <caption>Usage with Cucumber</caption>\n *  import { Before } from 'cucumber';\n *\n *  Before(() => engage(new Actors());\n *\n * @param {Cast} actors\n * @returns {void}\n *\n * @see {@link Actor}\n * @see {@link Cast}\n *\n * @see {@link Serenity#engage}\n ",
            "start": 905,
            "end": 2894,
            "loc": {
              "start": {
                "line": 50,
                "column": 0,
                "index": 905
              },
              "end": {
                "line": 102,
                "column": 3,
                "index": 2894
              }
            }
          }
        ],
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc \n *  \n * @lineNumber \n * 24 \n * @param \n * {SerenityConfig} config \n * @return \n * {void} \n ",
            "start": 247,
            "end": 354,
            "loc": {
              "start": {
                "line": 9,
                "column": 0,
                "index": 247
              },
              "end": {
                "line": 18,
                "column": 3,
                "index": 354
              }
            }
          },
          {
            "type": "CommentBlock",
            "value": "*\n * @desc\n *  Configures Serenity/JS. Every call to this function\n *  replaces the previous configuration provided,\n *  so this function should called be exactly once\n *  in your test suite.\n *\n *  This function is an alias for {@link Serenity#configure}.\n *\n * @param {SerenityConfig} config\n * @return {void}\n *\n * @see {@link Serenity#configure}\n ",
            "start": 357,
            "end": 712,
            "loc": {
              "start": {
                "line": 21,
                "column": 0,
                "index": 357
              },
              "end": {
                "line": 34,
                "column": 3,
                "index": 712
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 2895,
        "end": 2970,
        "loc": {
          "start": {
            "line": 103,
            "column": 0,
            "index": 2895
          },
          "end": {
            "line": 105,
            "column": 1,
            "index": 2970
          }
        },
        "exportKind": "value",
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "FunctionDeclaration",
          "start": 2902,
          "end": 2970,
          "loc": {
            "start": {
              "line": 103,
              "column": 7,
              "index": 2902
            },
            "end": {
              "line": 105,
              "column": 1,
              "index": 2970
            }
          },
          "id": {
            "type": "Identifier",
            "start": 2911,
            "end": 2917,
            "loc": {
              "start": {
                "line": 103,
                "column": 16,
                "index": 2911
              },
              "end": {
                "line": 103,
                "column": 22,
                "index": 2917
              },
              "identifierName": "engage"
            },
            "name": "engage"
          },
          "generator": false,
          "async": false,
          "params": [
            {
              "type": "Identifier",
              "start": 2918,
              "end": 2930,
              "loc": {
                "start": {
                  "line": 103,
                  "column": 23,
                  "index": 2918
                },
                "end": {
                  "line": 103,
                  "column": 35,
                  "index": 2930
                },
                "identifierName": "actors"
              },
              "name": "actors",
              "typeAnnotation": {
                "type": "TSTypeAnnotation",
                "start": 2924,
                "end": 2930,
                "loc": {
                  "start": {
                    "line": 103,
                    "column": 29,
                    "index": 2924
                  },
                  "end": {
                    "line": 103,
                    "column": 35,
                    "index": 2930
                  }
                },
                "typeAnnotation": {
                  "type": "TSTypeReference",
                  "start": 2926,
                  "end": 2930,
                  "loc": {
                    "start": {
                      "line": 103,
                      "column": 31,
                      "index": 2926
                    },
                    "end": {
                      "line": 103,
                      "column": 35,
                      "index": 2930
                    }
                  },
                  "typeName": {
                    "type": "Identifier",
                    "start": 2926,
                    "end": 2930,
                    "loc": {
                      "start": {
                        "line": 103,
                        "column": 31,
                        "index": 2926
                      },
                      "end": {
                        "line": 103,
                        "column": 35,
                        "index": 2930
                      },
                      "identifierName": "Cast"
                    },
                    "name": "Cast"
                  }
                }
              }
            }
          ],
          "returnType": {
            "type": "TSTypeAnnotation",
            "start": 2931,
            "end": 2937,
            "loc": {
              "start": {
                "line": 103,
                "column": 36,
                "index": 2931
              },
              "end": {
                "line": 103,
                "column": 42,
                "index": 2937
              }
            },
            "typeAnnotation": {
              "type": "TSVoidKeyword",
              "start": 2933,
              "end": 2937,
              "loc": {
                "start": {
                  "line": 103,
                  "column": 38,
                  "index": 2933
                },
                "end": {
                  "line": 103,
                  "column": 42,
                  "index": 2937
                }
              }
            }
          },
          "body": {
            "type": "BlockStatement",
            "start": 2938,
            "end": 2970,
            "loc": {
              "start": {
                "line": 103,
                "column": 43,
                "index": 2938
              },
              "end": {
                "line": 105,
                "column": 1,
                "index": 2970
              }
            },
            "body": [
              {
                "type": "ExpressionStatement",
                "start": 2944,
                "end": 2968,
                "loc": {
                  "start": {
                    "line": 104,
                    "column": 4,
                    "index": 2944
                  },
                  "end": {
                    "line": 104,
                    "column": 28,
                    "index": 2968
                  }
                },
                "expression": {
                  "type": "CallExpression",
                  "start": 2944,
                  "end": 2967,
                  "loc": {
                    "start": {
                      "line": 104,
                      "column": 4,
                      "index": 2944
                    },
                    "end": {
                      "line": 104,
                      "column": 27,
                      "index": 2967
                    }
                  },
                  "callee": {
                    "type": "MemberExpression",
                    "start": 2944,
                    "end": 2959,
                    "loc": {
                      "start": {
                        "line": 104,
                        "column": 4,
                        "index": 2944
                      },
                      "end": {
                        "line": 104,
                        "column": 19,
                        "index": 2959
                      }
                    },
                    "object": {
                      "type": "Identifier",
                      "start": 2944,
                      "end": 2952,
                      "loc": {
                        "start": {
                          "line": 104,
                          "column": 4,
                          "index": 2944
                        },
                        "end": {
                          "line": 104,
                          "column": 12,
                          "index": 2952
                        },
                        "identifierName": "serenity"
                      },
                      "name": "serenity"
                    },
                    "computed": false,
                    "property": {
                      "type": "Identifier",
                      "start": 2953,
                      "end": 2959,
                      "loc": {
                        "start": {
                          "line": 104,
                          "column": 13,
                          "index": 2953
                        },
                        "end": {
                          "line": 104,
                          "column": 19,
                          "index": 2959
                        },
                        "identifierName": "engage"
                      },
                      "name": "engage"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "start": 2960,
                      "end": 2966,
                      "loc": {
                        "start": {
                          "line": 104,
                          "column": 20,
                          "index": 2960
                        },
                        "end": {
                          "line": 104,
                          "column": 26,
                          "index": 2966
                        },
                        "identifierName": "actors"
                      },
                      "name": "actors"
                    }
                  ]
                }
              }
            ],
            "directives": []
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @desc \n *  \n * @lineNumber \n * 81 \n * @param \n * {Cast} actors \n * @return \n * {void} \n ",
              "start": 805,
              "end": 902,
              "loc": {
                "start": {
                  "line": 38,
                  "column": 0,
                  "index": 805
                },
                "end": {
                  "line": 47,
                  "column": 3,
                  "index": 902
                }
              }
            },
            {
              "type": "CommentBlock",
              "value": "*\n * @desc\n *  Re-configures Serenity/JS with a new {@link Cast} of {@link Actor}s\n *  you'd like to use in any subsequent call to {@link actorCalled}.\n *\n *  This function is an alias for {@link Serenity#engage},\n *  which provides an alternative to calling {@link Actor#whoCan}\n *  directly in your tests and is typically invoked in a \"before all\"\n *  or \"before each\" hook of your test runner of choice.\n *\n *  If your implementation of the {@link Cast} interface is stateless,\n *  you can invoke this function once before your entire test suite is executed, see\n *  - [`beforeAll`](https://jasmine.github.io/api/3.6/global.html#beforeAll) in Jasmine,\n *  - [`before`](https://mochajs.org/#hooks) in Mocha,\n *  - [`BeforeAll`](https://github.com/cucumber/cucumber-js/blob/master/docs/support_files/hooks.md#beforeall--afterall) in Cucumber.js\n *\n *  However, if your {@link Cast} holds state that you want reset before each scenario,\n *  it's better to invoke `engage` before each test using:\n *  - [`beforeEach`](https://jasmine.github.io/api/3.6/global.html#beforeEach) in Jasmine\n *  - [`beforeEach`](https://mochajs.org/#hooks) in Mocha,\n *  - [`Before`](https://github.com/cucumber/cucumber-js/blob/master/docs/support_files/hooks.md#hooks) in Cucumber.js\n *\n * @example <caption>Engaging a cast of actors</caption>\n *  import { Actor, Cast } from '@serenity-js/core';\n *\n *  class Actors implements Cast {\n *      prepare(actor: Actor) {\n *          return actor.whoCan(\n *              // ... abilities you'd like the Actor to have\n *          );\n *      }\n *  }\n *\n * engage(new Actors();\n *\n * @example <caption>Usage with Jasmine</caption>\n *  import 'jasmine';\n *\n *  beforeEach(() => engage(new Actors()));\n *\n * @example <caption>Usage with Cucumber</caption>\n *  import { Before } from 'cucumber';\n *\n *  Before(() => engage(new Actors());\n *\n * @param {Cast} actors\n * @returns {void}\n *\n * @see {@link Actor}\n * @see {@link Cast}\n *\n * @see {@link Serenity#engage}\n ",
              "start": 905,
              "end": 2894,
              "loc": {
                "start": {
                  "line": 50,
                  "column": 0,
                  "index": 905
                },
                "end": {
                  "line": 102,
                  "column": 3,
                  "index": 2894
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @desc \n *  \n * @lineNumber \n * 123 \n * @param \n * {string} name \n * @return \n * {Actor} \n ",
              "start": 2971,
              "end": 3070,
              "loc": {
                "start": {
                  "line": 106,
                  "column": 0,
                  "index": 2971
                },
                "end": {
                  "line": 115,
                  "column": 3,
                  "index": 3070
                }
              }
            },
            {
              "type": "CommentBlock",
              "value": "*\n * @desc\n *  Instantiates or retrieves an actor {@link Actor}\n *  called `name` if one has already been instantiated.\n *\n *  This method is an alias for {@link Serenity#theActorCalled}.\n *\n * @example <caption>Usage with Jasmine</caption>\n *   import 'jasmine';\n *   import { actorCalled } from '@serenity-js/core';\n *\n *   describe('Feature', () => {\n *\n *      it('should have some behaviour', () =>\n *          actorCalled('James').attemptsTo(\n *              // ... activities\n *          ));\n *   });\n *\n * @example <caption>Usage with Cucumber</caption>\n *   import { actorCalled } from '@serenity-js/core';\n *   import { Given } from 'cucumber';\n *\n *   Given(/(.*?) is a registered user/, (name: string) =>\n *      actorCalled(name).attemptsTo(\n *              // ... activities\n *          ));\n *\n * @param {string} name\n *  The name of the actor to instantiate or retrieve\n *\n * @returns {Actor}\n *\n * @see {@link engage}\n * @see {@link Actor}\n * @see {@link Cast}\n * @see {@link Serenity#theActorCalled}\n ",
              "start": 3073,
              "end": 4095,
              "loc": {
                "start": {
                  "line": 118,
                  "column": 0,
                  "index": 3073
                },
                "end": {
                  "line": 155,
                  "column": 3,
                  "index": 4095
                }
              }
            }
          ]
        },
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc \n *  \n * @lineNumber \n * 123 \n * @param \n * {string} name \n * @return \n * {Actor} \n ",
            "start": 2971,
            "end": 3070,
            "loc": {
              "start": {
                "line": 106,
                "column": 0,
                "index": 2971
              },
              "end": {
                "line": 115,
                "column": 3,
                "index": 3070
              }
            }
          },
          {
            "type": "CommentBlock",
            "value": "*\n * @desc\n *  Instantiates or retrieves an actor {@link Actor}\n *  called `name` if one has already been instantiated.\n *\n *  This method is an alias for {@link Serenity#theActorCalled}.\n *\n * @example <caption>Usage with Jasmine</caption>\n *   import 'jasmine';\n *   import { actorCalled } from '@serenity-js/core';\n *\n *   describe('Feature', () => {\n *\n *      it('should have some behaviour', () =>\n *          actorCalled('James').attemptsTo(\n *              // ... activities\n *          ));\n *   });\n *\n * @example <caption>Usage with Cucumber</caption>\n *   import { actorCalled } from '@serenity-js/core';\n *   import { Given } from 'cucumber';\n *\n *   Given(/(.*?) is a registered user/, (name: string) =>\n *      actorCalled(name).attemptsTo(\n *              // ... activities\n *          ));\n *\n * @param {string} name\n *  The name of the actor to instantiate or retrieve\n *\n * @returns {Actor}\n *\n * @see {@link engage}\n * @see {@link Actor}\n * @see {@link Cast}\n * @see {@link Serenity#theActorCalled}\n ",
            "start": 3073,
            "end": 4095,
            "loc": {
              "start": {
                "line": 118,
                "column": 0,
                "index": 3073
              },
              "end": {
                "line": 155,
                "column": 3,
                "index": 4095
              }
            }
          }
        ],
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc \n *  \n * @lineNumber \n * 81 \n * @param \n * {Cast} actors \n * @return \n * {void} \n ",
            "start": 805,
            "end": 902,
            "loc": {
              "start": {
                "line": 38,
                "column": 0,
                "index": 805
              },
              "end": {
                "line": 47,
                "column": 3,
                "index": 902
              }
            }
          },
          {
            "type": "CommentBlock",
            "value": "*\n * @desc\n *  Re-configures Serenity/JS with a new {@link Cast} of {@link Actor}s\n *  you'd like to use in any subsequent call to {@link actorCalled}.\n *\n *  This function is an alias for {@link Serenity#engage},\n *  which provides an alternative to calling {@link Actor#whoCan}\n *  directly in your tests and is typically invoked in a \"before all\"\n *  or \"before each\" hook of your test runner of choice.\n *\n *  If your implementation of the {@link Cast} interface is stateless,\n *  you can invoke this function once before your entire test suite is executed, see\n *  - [`beforeAll`](https://jasmine.github.io/api/3.6/global.html#beforeAll) in Jasmine,\n *  - [`before`](https://mochajs.org/#hooks) in Mocha,\n *  - [`BeforeAll`](https://github.com/cucumber/cucumber-js/blob/master/docs/support_files/hooks.md#beforeall--afterall) in Cucumber.js\n *\n *  However, if your {@link Cast} holds state that you want reset before each scenario,\n *  it's better to invoke `engage` before each test using:\n *  - [`beforeEach`](https://jasmine.github.io/api/3.6/global.html#beforeEach) in Jasmine\n *  - [`beforeEach`](https://mochajs.org/#hooks) in Mocha,\n *  - [`Before`](https://github.com/cucumber/cucumber-js/blob/master/docs/support_files/hooks.md#hooks) in Cucumber.js\n *\n * @example <caption>Engaging a cast of actors</caption>\n *  import { Actor, Cast } from '@serenity-js/core';\n *\n *  class Actors implements Cast {\n *      prepare(actor: Actor) {\n *          return actor.whoCan(\n *              // ... abilities you'd like the Actor to have\n *          );\n *      }\n *  }\n *\n * engage(new Actors();\n *\n * @example <caption>Usage with Jasmine</caption>\n *  import 'jasmine';\n *\n *  beforeEach(() => engage(new Actors()));\n *\n * @example <caption>Usage with Cucumber</caption>\n *  import { Before } from 'cucumber';\n *\n *  Before(() => engage(new Actors());\n *\n * @param {Cast} actors\n * @returns {void}\n *\n * @see {@link Actor}\n * @see {@link Cast}\n *\n * @see {@link Serenity#engage}\n ",
            "start": 905,
            "end": 2894,
            "loc": {
              "start": {
                "line": 50,
                "column": 0,
                "index": 905
              },
              "end": {
                "line": 102,
                "column": 3,
                "index": 2894
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 4096,
        "end": 4190,
        "loc": {
          "start": {
            "line": 156,
            "column": 0,
            "index": 4096
          },
          "end": {
            "line": 158,
            "column": 1,
            "index": 4190
          }
        },
        "exportKind": "value",
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "FunctionDeclaration",
          "start": 4103,
          "end": 4190,
          "loc": {
            "start": {
              "line": 156,
              "column": 7,
              "index": 4103
            },
            "end": {
              "line": 158,
              "column": 1,
              "index": 4190
            }
          },
          "id": {
            "type": "Identifier",
            "start": 4112,
            "end": 4123,
            "loc": {
              "start": {
                "line": 156,
                "column": 16,
                "index": 4112
              },
              "end": {
                "line": 156,
                "column": 27,
                "index": 4123
              },
              "identifierName": "actorCalled"
            },
            "name": "actorCalled"
          },
          "generator": false,
          "async": false,
          "params": [
            {
              "type": "Identifier",
              "start": 4124,
              "end": 4136,
              "loc": {
                "start": {
                  "line": 156,
                  "column": 28,
                  "index": 4124
                },
                "end": {
                  "line": 156,
                  "column": 40,
                  "index": 4136
                },
                "identifierName": "name"
              },
              "name": "name",
              "typeAnnotation": {
                "type": "TSTypeAnnotation",
                "start": 4128,
                "end": 4136,
                "loc": {
                  "start": {
                    "line": 156,
                    "column": 32,
                    "index": 4128
                  },
                  "end": {
                    "line": 156,
                    "column": 40,
                    "index": 4136
                  }
                },
                "typeAnnotation": {
                  "type": "TSStringKeyword",
                  "start": 4130,
                  "end": 4136,
                  "loc": {
                    "start": {
                      "line": 156,
                      "column": 34,
                      "index": 4130
                    },
                    "end": {
                      "line": 156,
                      "column": 40,
                      "index": 4136
                    }
                  }
                }
              }
            }
          ],
          "returnType": {
            "type": "TSTypeAnnotation",
            "start": 4137,
            "end": 4144,
            "loc": {
              "start": {
                "line": 156,
                "column": 41,
                "index": 4137
              },
              "end": {
                "line": 156,
                "column": 48,
                "index": 4144
              }
            },
            "typeAnnotation": {
              "type": "TSTypeReference",
              "start": 4139,
              "end": 4144,
              "loc": {
                "start": {
                  "line": 156,
                  "column": 43,
                  "index": 4139
                },
                "end": {
                  "line": 156,
                  "column": 48,
                  "index": 4144
                }
              },
              "typeName": {
                "type": "Identifier",
                "start": 4139,
                "end": 4144,
                "loc": {
                  "start": {
                    "line": 156,
                    "column": 43,
                    "index": 4139
                  },
                  "end": {
                    "line": 156,
                    "column": 48,
                    "index": 4144
                  },
                  "identifierName": "Actor"
                },
                "name": "Actor"
              }
            }
          },
          "body": {
            "type": "BlockStatement",
            "start": 4145,
            "end": 4190,
            "loc": {
              "start": {
                "line": 156,
                "column": 49,
                "index": 4145
              },
              "end": {
                "line": 158,
                "column": 1,
                "index": 4190
              }
            },
            "body": [
              {
                "type": "ReturnStatement",
                "start": 4151,
                "end": 4188,
                "loc": {
                  "start": {
                    "line": 157,
                    "column": 4,
                    "index": 4151
                  },
                  "end": {
                    "line": 157,
                    "column": 41,
                    "index": 4188
                  }
                },
                "argument": {
                  "type": "CallExpression",
                  "start": 4158,
                  "end": 4187,
                  "loc": {
                    "start": {
                      "line": 157,
                      "column": 11,
                      "index": 4158
                    },
                    "end": {
                      "line": 157,
                      "column": 40,
                      "index": 4187
                    }
                  },
                  "callee": {
                    "type": "MemberExpression",
                    "start": 4158,
                    "end": 4181,
                    "loc": {
                      "start": {
                        "line": 157,
                        "column": 11,
                        "index": 4158
                      },
                      "end": {
                        "line": 157,
                        "column": 34,
                        "index": 4181
                      }
                    },
                    "object": {
                      "type": "Identifier",
                      "start": 4158,
                      "end": 4166,
                      "loc": {
                        "start": {
                          "line": 157,
                          "column": 11,
                          "index": 4158
                        },
                        "end": {
                          "line": 157,
                          "column": 19,
                          "index": 4166
                        },
                        "identifierName": "serenity"
                      },
                      "name": "serenity"
                    },
                    "computed": false,
                    "property": {
                      "type": "Identifier",
                      "start": 4167,
                      "end": 4181,
                      "loc": {
                        "start": {
                          "line": 157,
                          "column": 20,
                          "index": 4167
                        },
                        "end": {
                          "line": 157,
                          "column": 34,
                          "index": 4181
                        },
                        "identifierName": "theActorCalled"
                      },
                      "name": "theActorCalled"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "start": 4182,
                      "end": 4186,
                      "loc": {
                        "start": {
                          "line": 157,
                          "column": 35,
                          "index": 4182
                        },
                        "end": {
                          "line": 157,
                          "column": 39,
                          "index": 4186
                        },
                        "identifierName": "name"
                      },
                      "name": "name"
                    }
                  ]
                }
              }
            ],
            "directives": []
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @desc \n *  \n * @lineNumber \n * 123 \n * @param \n * {string} name \n * @return \n * {Actor} \n ",
              "start": 2971,
              "end": 3070,
              "loc": {
                "start": {
                  "line": 106,
                  "column": 0,
                  "index": 2971
                },
                "end": {
                  "line": 115,
                  "column": 3,
                  "index": 3070
                }
              }
            },
            {
              "type": "CommentBlock",
              "value": "*\n * @desc\n *  Instantiates or retrieves an actor {@link Actor}\n *  called `name` if one has already been instantiated.\n *\n *  This method is an alias for {@link Serenity#theActorCalled}.\n *\n * @example <caption>Usage with Jasmine</caption>\n *   import 'jasmine';\n *   import { actorCalled } from '@serenity-js/core';\n *\n *   describe('Feature', () => {\n *\n *      it('should have some behaviour', () =>\n *          actorCalled('James').attemptsTo(\n *              // ... activities\n *          ));\n *   });\n *\n * @example <caption>Usage with Cucumber</caption>\n *   import { actorCalled } from '@serenity-js/core';\n *   import { Given } from 'cucumber';\n *\n *   Given(/(.*?) is a registered user/, (name: string) =>\n *      actorCalled(name).attemptsTo(\n *              // ... activities\n *          ));\n *\n * @param {string} name\n *  The name of the actor to instantiate or retrieve\n *\n * @returns {Actor}\n *\n * @see {@link engage}\n * @see {@link Actor}\n * @see {@link Cast}\n * @see {@link Serenity#theActorCalled}\n ",
              "start": 3073,
              "end": 4095,
              "loc": {
                "start": {
                  "line": 118,
                  "column": 0,
                  "index": 3073
                },
                "end": {
                  "line": 155,
                  "column": 3,
                  "index": 4095
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @desc \n *  \n * @lineNumber \n * 157 \n * @return \n * {Actor} \n ",
              "start": 4191,
              "end": 4261,
              "loc": {
                "start": {
                  "line": 159,
                  "column": 0,
                  "index": 4191
                },
                "end": {
                  "line": 166,
                  "column": 3,
                  "index": 4261
                }
              }
            },
            {
              "type": "CommentBlock",
              "value": "*\n * @desc\n *  Retrieves an actor who was last instantiated or retrieved\n *  using {@link actorCalled}.\n *\n *  This function is particularly useful when automating Cucumber scenarios.\n *\n *  This function is an alias for {@link Serenity#theActorInTheSpotlight}.\n *\n * @example <caption>Usage with Cucumber</caption>\n *   import { actorCalled } from '@serenity-js/core';\n *   import { Given, When } from 'cucumber';\n *\n *   Given(/(.*?) is a registered user/, (name: string) =>\n *      actorCalled(name).attemptsTo(\n *              // ... activities\n *          ));\n *\n *   When(/(?:he|she|they) browse their recent orders/, () =>\n *      actorInTheSpotlight().attemptsTo(\n *              // ... activities\n *          ));\n *\n * @returns {Actor}\n *\n * @see {@link engage}\n * @see {@link actorCalled}\n * @see {@link Actor}\n * @see {@link Cast}\n ",
              "start": 4264,
              "end": 5111,
              "loc": {
                "start": {
                  "line": 169,
                  "column": 0,
                  "index": 4264
                },
                "end": {
                  "line": 198,
                  "column": 3,
                  "index": 5111
                }
              }
            }
          ]
        },
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc \n *  \n * @lineNumber \n * 157 \n * @return \n * {Actor} \n ",
            "start": 4191,
            "end": 4261,
            "loc": {
              "start": {
                "line": 159,
                "column": 0,
                "index": 4191
              },
              "end": {
                "line": 166,
                "column": 3,
                "index": 4261
              }
            }
          },
          {
            "type": "CommentBlock",
            "value": "*\n * @desc\n *  Retrieves an actor who was last instantiated or retrieved\n *  using {@link actorCalled}.\n *\n *  This function is particularly useful when automating Cucumber scenarios.\n *\n *  This function is an alias for {@link Serenity#theActorInTheSpotlight}.\n *\n * @example <caption>Usage with Cucumber</caption>\n *   import { actorCalled } from '@serenity-js/core';\n *   import { Given, When } from 'cucumber';\n *\n *   Given(/(.*?) is a registered user/, (name: string) =>\n *      actorCalled(name).attemptsTo(\n *              // ... activities\n *          ));\n *\n *   When(/(?:he|she|they) browse their recent orders/, () =>\n *      actorInTheSpotlight().attemptsTo(\n *              // ... activities\n *          ));\n *\n * @returns {Actor}\n *\n * @see {@link engage}\n * @see {@link actorCalled}\n * @see {@link Actor}\n * @see {@link Cast}\n ",
            "start": 4264,
            "end": 5111,
            "loc": {
              "start": {
                "line": 169,
                "column": 0,
                "index": 4264
              },
              "end": {
                "line": 198,
                "column": 3,
                "index": 5111
              }
            }
          }
        ],
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc \n *  \n * @lineNumber \n * 123 \n * @param \n * {string} name \n * @return \n * {Actor} \n ",
            "start": 2971,
            "end": 3070,
            "loc": {
              "start": {
                "line": 106,
                "column": 0,
                "index": 2971
              },
              "end": {
                "line": 115,
                "column": 3,
                "index": 3070
              }
            }
          },
          {
            "type": "CommentBlock",
            "value": "*\n * @desc\n *  Instantiates or retrieves an actor {@link Actor}\n *  called `name` if one has already been instantiated.\n *\n *  This method is an alias for {@link Serenity#theActorCalled}.\n *\n * @example <caption>Usage with Jasmine</caption>\n *   import 'jasmine';\n *   import { actorCalled } from '@serenity-js/core';\n *\n *   describe('Feature', () => {\n *\n *      it('should have some behaviour', () =>\n *          actorCalled('James').attemptsTo(\n *              // ... activities\n *          ));\n *   });\n *\n * @example <caption>Usage with Cucumber</caption>\n *   import { actorCalled } from '@serenity-js/core';\n *   import { Given } from 'cucumber';\n *\n *   Given(/(.*?) is a registered user/, (name: string) =>\n *      actorCalled(name).attemptsTo(\n *              // ... activities\n *          ));\n *\n * @param {string} name\n *  The name of the actor to instantiate or retrieve\n *\n * @returns {Actor}\n *\n * @see {@link engage}\n * @see {@link Actor}\n * @see {@link Cast}\n * @see {@link Serenity#theActorCalled}\n ",
            "start": 3073,
            "end": 4095,
            "loc": {
              "start": {
                "line": 118,
                "column": 0,
                "index": 3073
              },
              "end": {
                "line": 155,
                "column": 3,
                "index": 4095
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 5112,
        "end": 5206,
        "loc": {
          "start": {
            "line": 199,
            "column": 0,
            "index": 5112
          },
          "end": {
            "line": 201,
            "column": 1,
            "index": 5206
          }
        },
        "exportKind": "value",
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "FunctionDeclaration",
          "start": 5119,
          "end": 5206,
          "loc": {
            "start": {
              "line": 199,
              "column": 7,
              "index": 5119
            },
            "end": {
              "line": 201,
              "column": 1,
              "index": 5206
            }
          },
          "id": {
            "type": "Identifier",
            "start": 5128,
            "end": 5147,
            "loc": {
              "start": {
                "line": 199,
                "column": 16,
                "index": 5128
              },
              "end": {
                "line": 199,
                "column": 35,
                "index": 5147
              },
              "identifierName": "actorInTheSpotlight"
            },
            "name": "actorInTheSpotlight"
          },
          "generator": false,
          "async": false,
          "params": [],
          "returnType": {
            "type": "TSTypeAnnotation",
            "start": 5149,
            "end": 5156,
            "loc": {
              "start": {
                "line": 199,
                "column": 37,
                "index": 5149
              },
              "end": {
                "line": 199,
                "column": 44,
                "index": 5156
              }
            },
            "typeAnnotation": {
              "type": "TSTypeReference",
              "start": 5151,
              "end": 5156,
              "loc": {
                "start": {
                  "line": 199,
                  "column": 39,
                  "index": 5151
                },
                "end": {
                  "line": 199,
                  "column": 44,
                  "index": 5156
                }
              },
              "typeName": {
                "type": "Identifier",
                "start": 5151,
                "end": 5156,
                "loc": {
                  "start": {
                    "line": 199,
                    "column": 39,
                    "index": 5151
                  },
                  "end": {
                    "line": 199,
                    "column": 44,
                    "index": 5156
                  },
                  "identifierName": "Actor"
                },
                "name": "Actor"
              }
            }
          },
          "body": {
            "type": "BlockStatement",
            "start": 5157,
            "end": 5206,
            "loc": {
              "start": {
                "line": 199,
                "column": 45,
                "index": 5157
              },
              "end": {
                "line": 201,
                "column": 1,
                "index": 5206
              }
            },
            "body": [
              {
                "type": "ReturnStatement",
                "start": 5163,
                "end": 5204,
                "loc": {
                  "start": {
                    "line": 200,
                    "column": 4,
                    "index": 5163
                  },
                  "end": {
                    "line": 200,
                    "column": 45,
                    "index": 5204
                  }
                },
                "argument": {
                  "type": "CallExpression",
                  "start": 5170,
                  "end": 5203,
                  "loc": {
                    "start": {
                      "line": 200,
                      "column": 11,
                      "index": 5170
                    },
                    "end": {
                      "line": 200,
                      "column": 44,
                      "index": 5203
                    }
                  },
                  "callee": {
                    "type": "MemberExpression",
                    "start": 5170,
                    "end": 5201,
                    "loc": {
                      "start": {
                        "line": 200,
                        "column": 11,
                        "index": 5170
                      },
                      "end": {
                        "line": 200,
                        "column": 42,
                        "index": 5201
                      }
                    },
                    "object": {
                      "type": "Identifier",
                      "start": 5170,
                      "end": 5178,
                      "loc": {
                        "start": {
                          "line": 200,
                          "column": 11,
                          "index": 5170
                        },
                        "end": {
                          "line": 200,
                          "column": 19,
                          "index": 5178
                        },
                        "identifierName": "serenity"
                      },
                      "name": "serenity"
                    },
                    "computed": false,
                    "property": {
                      "type": "Identifier",
                      "start": 5179,
                      "end": 5201,
                      "loc": {
                        "start": {
                          "line": 200,
                          "column": 20,
                          "index": 5179
                        },
                        "end": {
                          "line": 200,
                          "column": 42,
                          "index": 5201
                        },
                        "identifierName": "theActorInTheSpotlight"
                      },
                      "name": "theActorInTheSpotlight"
                    }
                  },
                  "arguments": []
                }
              }
            ],
            "directives": []
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @desc \n *  \n * @lineNumber \n * 157 \n * @return \n * {Actor} \n ",
              "start": 4191,
              "end": 4261,
              "loc": {
                "start": {
                  "line": 159,
                  "column": 0,
                  "index": 4191
                },
                "end": {
                  "line": 166,
                  "column": 3,
                  "index": 4261
                }
              }
            },
            {
              "type": "CommentBlock",
              "value": "*\n * @desc\n *  Retrieves an actor who was last instantiated or retrieved\n *  using {@link actorCalled}.\n *\n *  This function is particularly useful when automating Cucumber scenarios.\n *\n *  This function is an alias for {@link Serenity#theActorInTheSpotlight}.\n *\n * @example <caption>Usage with Cucumber</caption>\n *   import { actorCalled } from '@serenity-js/core';\n *   import { Given, When } from 'cucumber';\n *\n *   Given(/(.*?) is a registered user/, (name: string) =>\n *      actorCalled(name).attemptsTo(\n *              // ... activities\n *          ));\n *\n *   When(/(?:he|she|they) browse their recent orders/, () =>\n *      actorInTheSpotlight().attemptsTo(\n *              // ... activities\n *          ));\n *\n * @returns {Actor}\n *\n * @see {@link engage}\n * @see {@link actorCalled}\n * @see {@link Actor}\n * @see {@link Cast}\n ",
              "start": 4264,
              "end": 5111,
              "loc": {
                "start": {
                  "line": 169,
                  "column": 0,
                  "index": 4264
                },
                "end": {
                  "line": 198,
                  "column": 3,
                  "index": 5111
                }
              }
            }
          ],
          "trailingComments": []
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc \n *  \n * @lineNumber \n * 157 \n * @return \n * {Actor} \n ",
            "start": 4191,
            "end": 4261,
            "loc": {
              "start": {
                "line": 159,
                "column": 0,
                "index": 4191
              },
              "end": {
                "line": 166,
                "column": 3,
                "index": 4261
              }
            }
          },
          {
            "type": "CommentBlock",
            "value": "*\n * @desc\n *  Retrieves an actor who was last instantiated or retrieved\n *  using {@link actorCalled}.\n *\n *  This function is particularly useful when automating Cucumber scenarios.\n *\n *  This function is an alias for {@link Serenity#theActorInTheSpotlight}.\n *\n * @example <caption>Usage with Cucumber</caption>\n *   import { actorCalled } from '@serenity-js/core';\n *   import { Given, When } from 'cucumber';\n *\n *   Given(/(.*?) is a registered user/, (name: string) =>\n *      actorCalled(name).attemptsTo(\n *              // ... activities\n *          ));\n *\n *   When(/(?:he|she|they) browse their recent orders/, () =>\n *      actorInTheSpotlight().attemptsTo(\n *              // ... activities\n *          ));\n *\n * @returns {Actor}\n *\n * @see {@link engage}\n * @see {@link actorCalled}\n * @see {@link Actor}\n * @see {@link Cast}\n ",
            "start": 4264,
            "end": 5111,
            "loc": {
              "start": {
                "line": 169,
                "column": 0,
                "index": 4264
              },
              "end": {
                "line": 198,
                "column": 3,
                "index": 5111
              }
            }
          }
        ]
      }
    ],
    "directives": []
  },
  "comments": [
    {
      "type": "CommentBlock",
      "value": "*\n * @desc \n *  \n * @lineNumber \n * 24 \n * @param \n * {SerenityConfig} config \n * @return \n * {void} \n ",
      "start": 247,
      "end": 354,
      "loc": {
        "start": {
          "line": 9,
          "column": 0,
          "index": 247
        },
        "end": {
          "line": 18,
          "column": 3,
          "index": 354
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc\n *  Configures Serenity/JS. Every call to this function\n *  replaces the previous configuration provided,\n *  so this function should called be exactly once\n *  in your test suite.\n *\n *  This function is an alias for {@link Serenity#configure}.\n *\n * @param {SerenityConfig} config\n * @return {void}\n *\n * @see {@link Serenity#configure}\n ",
      "start": 357,
      "end": 712,
      "loc": {
        "start": {
          "line": 21,
          "column": 0,
          "index": 357
        },
        "end": {
          "line": 34,
          "column": 3,
          "index": 712
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc \n *  \n * @lineNumber \n * 81 \n * @param \n * {Cast} actors \n * @return \n * {void} \n ",
      "start": 805,
      "end": 902,
      "loc": {
        "start": {
          "line": 38,
          "column": 0,
          "index": 805
        },
        "end": {
          "line": 47,
          "column": 3,
          "index": 902
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc\n *  Re-configures Serenity/JS with a new {@link Cast} of {@link Actor}s\n *  you'd like to use in any subsequent call to {@link actorCalled}.\n *\n *  This function is an alias for {@link Serenity#engage},\n *  which provides an alternative to calling {@link Actor#whoCan}\n *  directly in your tests and is typically invoked in a \"before all\"\n *  or \"before each\" hook of your test runner of choice.\n *\n *  If your implementation of the {@link Cast} interface is stateless,\n *  you can invoke this function once before your entire test suite is executed, see\n *  - [`beforeAll`](https://jasmine.github.io/api/3.6/global.html#beforeAll) in Jasmine,\n *  - [`before`](https://mochajs.org/#hooks) in Mocha,\n *  - [`BeforeAll`](https://github.com/cucumber/cucumber-js/blob/master/docs/support_files/hooks.md#beforeall--afterall) in Cucumber.js\n *\n *  However, if your {@link Cast} holds state that you want reset before each scenario,\n *  it's better to invoke `engage` before each test using:\n *  - [`beforeEach`](https://jasmine.github.io/api/3.6/global.html#beforeEach) in Jasmine\n *  - [`beforeEach`](https://mochajs.org/#hooks) in Mocha,\n *  - [`Before`](https://github.com/cucumber/cucumber-js/blob/master/docs/support_files/hooks.md#hooks) in Cucumber.js\n *\n * @example <caption>Engaging a cast of actors</caption>\n *  import { Actor, Cast } from '@serenity-js/core';\n *\n *  class Actors implements Cast {\n *      prepare(actor: Actor) {\n *          return actor.whoCan(\n *              // ... abilities you'd like the Actor to have\n *          );\n *      }\n *  }\n *\n * engage(new Actors();\n *\n * @example <caption>Usage with Jasmine</caption>\n *  import 'jasmine';\n *\n *  beforeEach(() => engage(new Actors()));\n *\n * @example <caption>Usage with Cucumber</caption>\n *  import { Before } from 'cucumber';\n *\n *  Before(() => engage(new Actors());\n *\n * @param {Cast} actors\n * @returns {void}\n *\n * @see {@link Actor}\n * @see {@link Cast}\n *\n * @see {@link Serenity#engage}\n ",
      "start": 905,
      "end": 2894,
      "loc": {
        "start": {
          "line": 50,
          "column": 0,
          "index": 905
        },
        "end": {
          "line": 102,
          "column": 3,
          "index": 2894
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc \n *  \n * @lineNumber \n * 123 \n * @param \n * {string} name \n * @return \n * {Actor} \n ",
      "start": 2971,
      "end": 3070,
      "loc": {
        "start": {
          "line": 106,
          "column": 0,
          "index": 2971
        },
        "end": {
          "line": 115,
          "column": 3,
          "index": 3070
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc\n *  Instantiates or retrieves an actor {@link Actor}\n *  called `name` if one has already been instantiated.\n *\n *  This method is an alias for {@link Serenity#theActorCalled}.\n *\n * @example <caption>Usage with Jasmine</caption>\n *   import 'jasmine';\n *   import { actorCalled } from '@serenity-js/core';\n *\n *   describe('Feature', () => {\n *\n *      it('should have some behaviour', () =>\n *          actorCalled('James').attemptsTo(\n *              // ... activities\n *          ));\n *   });\n *\n * @example <caption>Usage with Cucumber</caption>\n *   import { actorCalled } from '@serenity-js/core';\n *   import { Given } from 'cucumber';\n *\n *   Given(/(.*?) is a registered user/, (name: string) =>\n *      actorCalled(name).attemptsTo(\n *              // ... activities\n *          ));\n *\n * @param {string} name\n *  The name of the actor to instantiate or retrieve\n *\n * @returns {Actor}\n *\n * @see {@link engage}\n * @see {@link Actor}\n * @see {@link Cast}\n * @see {@link Serenity#theActorCalled}\n ",
      "start": 3073,
      "end": 4095,
      "loc": {
        "start": {
          "line": 118,
          "column": 0,
          "index": 3073
        },
        "end": {
          "line": 155,
          "column": 3,
          "index": 4095
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc \n *  \n * @lineNumber \n * 157 \n * @return \n * {Actor} \n ",
      "start": 4191,
      "end": 4261,
      "loc": {
        "start": {
          "line": 159,
          "column": 0,
          "index": 4191
        },
        "end": {
          "line": 166,
          "column": 3,
          "index": 4261
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc\n *  Retrieves an actor who was last instantiated or retrieved\n *  using {@link actorCalled}.\n *\n *  This function is particularly useful when automating Cucumber scenarios.\n *\n *  This function is an alias for {@link Serenity#theActorInTheSpotlight}.\n *\n * @example <caption>Usage with Cucumber</caption>\n *   import { actorCalled } from '@serenity-js/core';\n *   import { Given, When } from 'cucumber';\n *\n *   Given(/(.*?) is a registered user/, (name: string) =>\n *      actorCalled(name).attemptsTo(\n *              // ... activities\n *          ));\n *\n *   When(/(?:he|she|they) browse their recent orders/, () =>\n *      actorInTheSpotlight().attemptsTo(\n *              // ... activities\n *          ));\n *\n * @returns {Actor}\n *\n * @see {@link engage}\n * @see {@link actorCalled}\n * @see {@link Actor}\n * @see {@link Cast}\n ",
      "start": 4264,
      "end": 5111,
      "loc": {
        "start": {
          "line": 169,
          "column": 0,
          "index": 4264
        },
        "end": {
          "line": 198,
          "column": 3,
          "index": 5111
        }
      }
    }
  ]
}